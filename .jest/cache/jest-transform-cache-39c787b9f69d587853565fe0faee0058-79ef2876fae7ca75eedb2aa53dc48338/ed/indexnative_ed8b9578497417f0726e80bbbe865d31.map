{"version":3,"names":["_react","_interopRequireWildcard","require","_reactNative","_reactFreeze","_package","_TransitionProgressContext","_interopRequireDefault","_useTransitionProgress","_utils","obj","__esModule","default","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_extends","assign","bind","target","i","arguments","length","source","apply","_defineProperty","value","_toPropertyKey","enumerable","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","TypeError","Number","isPlatformSupported","Platform","OS","ENABLE_SCREENS","enableScreens","shouldEnableScreens","UIManager","getViewManagerConfig","console","error","ENABLE_FREEZE","enableFreeze","shouldEnableReactFreeze","minor","parseInt","version","split","warn","shouldUseActivityState","screensEnabled","NativeScreenValue","NativeScreenContainerValue","NativeScreenNavigationContainerValue","NativeScreenStack","NativeScreenStackHeaderConfig","NativeScreenStackHeaderSubview","AnimatedNativeScreen","NativeSearchBar","NativeSearchBarCommands","NativeFullWindowOverlay","ScreensNativeModules","NativeScreen","NativeScreenContainer","NativeScreenNavigationContainer","Commands","DelayedFreeze","_ref","freeze","children","_react$default$useSta","useState","_react$default$useSta2","_slicedToArray2","freezeState","setFreezeState","useEffect","id","setImmediate","clearImmediate","createElement","Freeze","ScreenStack","props","rest","_objectWithoutProperties2","_excluded","size","Children","count","childrenWithFreeze","map","child","index","_props$descriptor","_props$descriptors","_descriptor$options$f","_descriptor$options","descriptor","descriptors","freezeEnabled","options","freezeOnBlur","InnerScreen","_react$default$Compon","_this","_classCallCheck2","_callSuper","Animated","Value","ref","_this$props$onCompone","_this$props","onComponentRef","_inherits2","_createClass2","setNativeProps","_this$ref","render","_this2","_this$props2","_this$props2$enabled","enabled","_this$props2$freezeOn","_excluded2","_rest$sheetAllowedDet","sheetAllowedDetents","_rest$sheetLargestUnd","sheetLargestUndimmedDetent","_rest$sheetGrabberVis","sheetGrabberVisible","_rest$sheetCornerRadi","sheetCornerRadius","_rest$sheetExpandsWhe","sheetExpandsWhenScrolledToEdge","_gestureResponseDista","_gestureResponseDista2","_gestureResponseDista3","_gestureResponseDista4","createAnimatedComponent","active","activityState","isNativeStack","gestureResponseDistance","onGestureCancel","_excluded3","handleRef","_ref$viewConfig","viewConfig","validAttributes","style","display","setRef","start","end","top","bottom","onTransitionProgress","event","nativeEvent","progress","closing","goingForward","useNativeDriver","Provider","_excluded4","View","Component","ScreenContainer","_props$enabled","hasTwoStates","_excluded5","FullWindowOverlay","position","width","height","styles","StyleSheet","create","headerSubview","right","flexDirection","alignItems","justifyContent","ScreenStackHeaderBackButtonImage","type","Image","resizeMode","fadeDuration","SearchBar","_react$default$Compon2","_this3","nativeSearchBarRef","createRef","_callMethodWithRef","method","current","blur","focus","toggleCancelButton","flag","clearText","setText","text","isSearchBarAvailableForCurrentPlatform","ScreenStackHeaderRightView","ScreenStackHeaderLeftView","ScreenStackHeaderCenterView","ScreenStackHeaderSearchBarView","ScreenContext","createContext","Screen","_react$default$Compon3","ScreenWrapper","context","module","exports","ScreenStackHeaderConfig","ScreenStackHeaderSubview","SearchBarCommands","useTransitionProgress","isNewBackTitleImplementation","executeNativeBackPress"],"sources":["index.native.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-var-requires */\nimport React, { useEffect, PropsWithChildren, ReactNode } from 'react';\nimport {\n  Animated,\n  Image,\n  ImageProps,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  UIManager,\n  View,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\nimport { Freeze } from 'react-freeze';\nimport { version } from 'react-native/package.json';\n\nimport TransitionProgressContext from './TransitionProgressContext';\nimport useTransitionProgress from './useTransitionProgress';\nimport {\n  StackPresentationTypes,\n  StackAnimationTypes,\n  BlurEffectTypes,\n  ScreenReplaceTypes,\n  ScreenOrientationTypes,\n  HeaderSubviewTypes,\n  ScreenProps,\n  ScreenContainerProps,\n  ScreenStackProps,\n  ScreenStackHeaderConfigProps,\n  SearchBarProps,\n  SearchBarCommands,\n} from './types';\nimport {\n  isSearchBarAvailableForCurrentPlatform,\n  isNewBackTitleImplementation,\n  executeNativeBackPress,\n} from './utils';\n\n// web implementation is taken from `index.tsx`\nconst isPlatformSupported =\n  Platform.OS === 'ios' ||\n  Platform.OS === 'android' ||\n  Platform.OS === 'windows';\n\nlet ENABLE_SCREENS = isPlatformSupported;\n\nfunction enableScreens(shouldEnableScreens = true): void {\n  ENABLE_SCREENS = isPlatformSupported && shouldEnableScreens;\n  if (ENABLE_SCREENS && !UIManager.getViewManagerConfig('RNSScreen')) {\n    console.error(\n      `Screen native module hasn't been linked. Please check the react-native-screens README for more details`\n    );\n  }\n}\n\nlet ENABLE_FREEZE = false;\n\nfunction enableFreeze(shouldEnableReactFreeze = true): void {\n  const minor = parseInt(version.split('.')[1]); // eg. takes 66 from '0.66.0'\n\n  // react-freeze requires react-native >=0.64, react-native from main is 0.0.0\n  if (!(minor === 0 || minor >= 64) && shouldEnableReactFreeze) {\n    console.warn(\n      'react-freeze library requires at least react-native 0.64. Please upgrade your react-native version in order to use this feature.'\n    );\n  }\n\n  ENABLE_FREEZE = shouldEnableReactFreeze;\n}\n\n// const that tells if the library should use new implementation, will be undefined for older versions\nconst shouldUseActivityState = true;\n\nfunction screensEnabled(): boolean {\n  return ENABLE_SCREENS;\n}\n\ntype SearchBarCommandsType = {\n  blur: (\n    viewRef: React.ElementRef<typeof ScreensNativeModules.NativeSearchBar>\n  ) => void;\n  focus: (\n    viewRef: React.ElementRef<typeof ScreensNativeModules.NativeSearchBar>\n  ) => void;\n  clearText: (\n    viewRef: React.ElementRef<typeof ScreensNativeModules.NativeSearchBar>\n  ) => void;\n  toggleCancelButton: (\n    viewRef: React.ElementRef<typeof ScreensNativeModules.NativeSearchBar>,\n    flag: boolean\n  ) => void;\n  setText: (\n    viewRef: React.ElementRef<typeof ScreensNativeModules.NativeSearchBar>,\n    text: string\n  ) => void;\n};\n\n// We initialize these lazily so that importing the module doesn't throw error when not linked\n// This is necessary coz libraries such as React Navigation import the library where it may not be enabled\nlet NativeScreenValue: React.ComponentType<ScreenProps>;\nlet NativeScreenContainerValue: React.ComponentType<ScreenContainerProps>;\nlet NativeScreenNavigationContainerValue: React.ComponentType<ScreenContainerProps>;\nlet NativeScreenStack: React.ComponentType<ScreenStackProps>;\nlet NativeScreenStackHeaderConfig: React.ComponentType<ScreenStackHeaderConfigProps>;\nlet NativeScreenStackHeaderSubview: React.ComponentType<\n  React.PropsWithChildren<ViewProps & { type?: HeaderSubviewTypes }>\n>;\nlet AnimatedNativeScreen: React.ComponentType<ScreenProps>;\n\nlet NativeSearchBar: React.ComponentType<SearchBarProps> &\n  typeof NativeSearchBarCommands;\nlet NativeSearchBarCommands: SearchBarCommandsType;\n\nlet NativeFullWindowOverlay: React.ComponentType<\n  PropsWithChildren<{\n    style: StyleProp<ViewStyle>;\n  }>\n>;\n\nconst ScreensNativeModules = {\n  get NativeScreen() {\n    NativeScreenValue =\n      NativeScreenValue || require('./fabric/ScreenNativeComponent').default;\n    return NativeScreenValue;\n  },\n\n  get NativeScreenContainer() {\n    NativeScreenContainerValue =\n      NativeScreenContainerValue ||\n      require('./fabric/ScreenContainerNativeComponent').default;\n    return NativeScreenContainerValue;\n  },\n\n  get NativeScreenNavigationContainer() {\n    NativeScreenNavigationContainerValue =\n      NativeScreenNavigationContainerValue ||\n      (Platform.OS === 'ios'\n        ? require('./fabric/ScreenNavigationContainerNativeComponent').default\n        : this.NativeScreenContainer);\n    return NativeScreenNavigationContainerValue;\n  },\n\n  get NativeScreenStack() {\n    NativeScreenStack =\n      NativeScreenStack ||\n      require('./fabric/ScreenStackNativeComponent').default;\n    return NativeScreenStack;\n  },\n\n  get NativeScreenStackHeaderConfig() {\n    NativeScreenStackHeaderConfig =\n      NativeScreenStackHeaderConfig ||\n      require('./fabric/ScreenStackHeaderConfigNativeComponent').default;\n    return NativeScreenStackHeaderConfig;\n  },\n\n  get NativeScreenStackHeaderSubview() {\n    NativeScreenStackHeaderSubview =\n      NativeScreenStackHeaderSubview ||\n      require('./fabric/ScreenStackHeaderSubviewNativeComponent').default;\n    return NativeScreenStackHeaderSubview;\n  },\n\n  get NativeSearchBar() {\n    NativeSearchBar =\n      NativeSearchBar || require('./fabric/SearchBarNativeComponent').default;\n    return NativeSearchBar;\n  },\n\n  get NativeSearchBarCommands() {\n    NativeSearchBarCommands =\n      NativeSearchBarCommands ||\n      require('./fabric/SearchBarNativeComponent').Commands;\n    return NativeSearchBarCommands;\n  },\n\n  get NativeFullWindowOverlay() {\n    NativeFullWindowOverlay =\n      NativeFullWindowOverlay ||\n      require('./fabric/FullWindowOverlayNativeComponent').default;\n    return NativeFullWindowOverlay;\n  },\n};\n\ninterface FreezeWrapperProps {\n  freeze: boolean;\n  children: React.ReactNode;\n}\n\n// This component allows one more render before freezing the screen.\n// Allows activityState to reach the native side and useIsFocused to work correctly.\nfunction DelayedFreeze({ freeze, children }: FreezeWrapperProps) {\n  // flag used for determining whether freeze should be enabled\n  const [freezeState, setFreezeState] = React.useState(false);\n\n  useEffect(() => {\n    const id = setImmediate(() => {\n      setFreezeState(freeze);\n    });\n    return () => {\n      clearImmediate(id);\n    }\n  }, [freeze])\n\n  return <Freeze freeze={freeze ? freezeState : false}>{children}</Freeze>;\n}\n\nfunction ScreenStack(props: ScreenStackProps) {\n  const { children, ...rest } = props;\n  const size = React.Children.count(children);\n  // freezes all screens except the top one\n  const childrenWithFreeze = React.Children.map(children, (child, index) => {\n    // @ts-expect-error it's either SceneView in v6 or RouteView in v5\n    const { props, key } = child;\n    const descriptor = props?.descriptor ?? props?.descriptors?.[key];\n    const freezeEnabled = descriptor?.options?.freezeOnBlur ?? ENABLE_FREEZE;\n\n    return (\n      <DelayedFreeze freeze={freezeEnabled && size - index > 1}>\n        {child}\n      </DelayedFreeze>\n    );\n  });\n\n  return (\n    <ScreensNativeModules.NativeScreenStack {...rest}>\n      {childrenWithFreeze}\n    </ScreensNativeModules.NativeScreenStack>\n  );\n}\n\n// Incomplete type, all accessible properties available at:\n// react-native/Libraries/Components/View/ReactNativeViewViewConfig.js\ninterface ViewConfig extends View {\n  viewConfig: {\n    validAttributes: {\n      style: {\n        display: boolean;\n      };\n    };\n  };\n}\n\nclass InnerScreen extends React.Component<ScreenProps> {\n  private ref: React.ElementRef<typeof View> | null = null;\n  private closing = new Animated.Value(0);\n  private progress = new Animated.Value(0);\n  private goingForward = new Animated.Value(0);\n\n  setNativeProps(props: ScreenProps): void {\n    this.ref?.setNativeProps(props);\n  }\n\n  setRef = (ref: React.ElementRef<typeof View> | null): void => {\n    this.ref = ref;\n    this.props.onComponentRef?.(ref);\n  };\n\n  render() {\n    const {\n      enabled = ENABLE_SCREENS,\n      freezeOnBlur = ENABLE_FREEZE,\n      ...rest\n    } = this.props;\n\n    // To maintain default behaviour of formSheet stack presentation style & and to have resonable\n    // defaults for new medium-detent iOS API we need to set defaults here\n    const {\n      sheetAllowedDetents = 'large',\n      sheetLargestUndimmedDetent = 'all',\n      sheetGrabberVisible = false,\n      sheetCornerRadius = -1.0,\n      sheetExpandsWhenScrolledToEdge = true,\n    } = rest;\n\n    if (enabled && isPlatformSupported) {\n      AnimatedNativeScreen =\n        AnimatedNativeScreen ||\n        Animated.createAnimatedComponent(ScreensNativeModules.NativeScreen);\n\n      let {\n        // Filter out active prop in this case because it is unused and\n        // can cause problems depending on react-native version:\n        // https://github.com/react-navigation/react-navigation/issues/4886\n        active,\n        activityState,\n        children,\n        isNativeStack,\n        gestureResponseDistance,\n        onGestureCancel,\n        ...props\n      } = rest;\n\n      if (active !== undefined && activityState === undefined) {\n        console.warn(\n          'It appears that you are using old version of react-navigation library. Please update @react-navigation/bottom-tabs, @react-navigation/stack and @react-navigation/drawer to version 5.10.0 or above to take full advantage of new functionality added to react-native-screens'\n        );\n        activityState = active !== 0 ? 2 : 0; // in the new version, we need one of the screens to have value of 2 after the transition\n      }\n\n      const handleRef = (ref: ViewConfig) => {\n        if (ref?.viewConfig?.validAttributes?.style) {\n          ref.viewConfig.validAttributes.style = {\n            ...ref.viewConfig.validAttributes.style,\n            display: false,\n          };\n          this.setRef(ref);\n        }\n      };\n\n      return (\n        <DelayedFreeze freeze={freezeOnBlur && activityState === 0}>\n          <AnimatedNativeScreen\n            {...props}\n            activityState={activityState}\n            sheetAllowedDetents={sheetAllowedDetents}\n            sheetLargestUndimmedDetent={sheetLargestUndimmedDetent}\n            sheetGrabberVisible={sheetGrabberVisible}\n            sheetCornerRadius={sheetCornerRadius}\n            sheetExpandsWhenScrolledToEdge={sheetExpandsWhenScrolledToEdge}\n            gestureResponseDistance={{\n              start: gestureResponseDistance?.start ?? -1,\n              end: gestureResponseDistance?.end ?? -1,\n              top: gestureResponseDistance?.top ?? -1,\n              bottom: gestureResponseDistance?.bottom ?? -1,\n            }}\n            // This prevents showing blank screen when navigating between multiple screens with freezing\n            // https://github.com/software-mansion/react-native-screens/pull/1208\n            ref={handleRef}\n            onTransitionProgress={\n              !isNativeStack\n                ? undefined\n                : Animated.event(\n                    [\n                      {\n                        nativeEvent: {\n                          progress: this.progress,\n                          closing: this.closing,\n                          goingForward: this.goingForward,\n                        },\n                      },\n                    ],\n                    { useNativeDriver: true }\n                  )\n            }\n            onGestureCancel={\n              onGestureCancel ??\n              (() => {\n                // for internal use\n              })\n            }>\n            {!isNativeStack ? ( // see comment of this prop in types.tsx for information why it is needed\n              children\n            ) : (\n              <TransitionProgressContext.Provider\n                value={{\n                  progress: this.progress,\n                  closing: this.closing,\n                  goingForward: this.goingForward,\n                }}>\n                {children}\n              </TransitionProgressContext.Provider>\n            )}\n          </AnimatedNativeScreen>\n        </DelayedFreeze>\n      );\n    } else {\n      // same reason as above\n      let {\n        active,\n        activityState,\n        style,\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        onComponentRef,\n        ...props\n      } = rest;\n\n      if (active !== undefined && activityState === undefined) {\n        activityState = active !== 0 ? 2 : 0;\n      }\n      return (\n        <Animated.View\n          style={[style, { display: activityState !== 0 ? 'flex' : 'none' }]}\n          ref={this.setRef}\n          {...props}\n        />\n      );\n    }\n  }\n}\n\nfunction ScreenContainer(props: ScreenContainerProps) {\n  const { enabled = ENABLE_SCREENS, hasTwoStates, ...rest } = props;\n\n  if (enabled && isPlatformSupported) {\n    if (hasTwoStates) {\n      return <ScreensNativeModules.NativeScreenNavigationContainer {...rest} />;\n    }\n    return <ScreensNativeModules.NativeScreenContainer {...rest} />;\n  }\n  return <View {...rest} />;\n}\n\nfunction FullWindowOverlay(props: { children: ReactNode }) {\n  if (Platform.OS !== 'ios') {\n    console.warn('Importing FullWindowOverlay is only valid on iOS devices.');\n    return <View {...props} />;\n  }\n  return (\n    <ScreensNativeModules.NativeFullWindowOverlay\n      style={{ position: 'absolute', width: '100%', height: '100%' }}>\n      {props.children}\n    </ScreensNativeModules.NativeFullWindowOverlay>\n  );\n}\n\nconst styles = StyleSheet.create({\n  headerSubview: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\nconst ScreenStackHeaderBackButtonImage = (props: ImageProps): JSX.Element => (\n  <ScreensNativeModules.NativeScreenStackHeaderSubview\n    type=\"back\"\n    style={styles.headerSubview}>\n    <Image resizeMode=\"center\" fadeDuration={0} {...props} />\n  </ScreensNativeModules.NativeScreenStackHeaderSubview>\n);\n\nclass SearchBar extends React.Component<SearchBarProps> {\n  nativeSearchBarRef: React.RefObject<SearchBarCommands>;\n\n  constructor(props: SearchBarProps) {\n    super(props);\n    this.nativeSearchBarRef = React.createRef();\n  }\n\n  _callMethodWithRef(method: (ref: SearchBarCommands) => void) {\n    const ref = this.nativeSearchBarRef.current;\n    if (ref) {\n      method(ref);\n    } else {\n      console.warn(\n        'Reference to native search bar component has not been updated yet'\n      );\n    }\n  }\n\n  blur() {\n    this._callMethodWithRef(ref =>\n      ScreensNativeModules.NativeSearchBarCommands.blur(ref)\n    );\n  }\n\n  focus() {\n    this._callMethodWithRef(ref =>\n      ScreensNativeModules.NativeSearchBarCommands.focus(ref)\n    );\n  }\n\n  toggleCancelButton(flag: boolean) {\n    this._callMethodWithRef(ref =>\n      ScreensNativeModules.NativeSearchBarCommands.toggleCancelButton(ref, flag)\n    );\n  }\n\n  clearText() {\n    this._callMethodWithRef(ref =>\n      ScreensNativeModules.NativeSearchBarCommands.clearText(ref)\n    );\n  }\n\n  setText(text: string) {\n    this._callMethodWithRef(ref =>\n      ScreensNativeModules.NativeSearchBarCommands.setText(ref, text)\n    );\n  }\n\n  render() {\n    if (!isSearchBarAvailableForCurrentPlatform) {\n      console.warn(\n        'Importing SearchBar is only valid on iOS and Android devices.'\n      );\n      return View as any as ReactNode;\n    }\n\n    return (\n      <ScreensNativeModules.NativeSearchBar\n        {...this.props}\n        ref={this.nativeSearchBarRef}\n      />\n    );\n  }\n}\n\nconst ScreenStackHeaderRightView = (\n  props: React.PropsWithChildren<ViewProps>\n): JSX.Element => (\n  <ScreensNativeModules.NativeScreenStackHeaderSubview\n    {...props}\n    type=\"right\"\n    style={styles.headerSubview}\n  />\n);\n\nconst ScreenStackHeaderLeftView = (\n  props: React.PropsWithChildren<ViewProps>\n): JSX.Element => (\n  <ScreensNativeModules.NativeScreenStackHeaderSubview\n    {...props}\n    type=\"left\"\n    style={styles.headerSubview}\n  />\n);\n\nconst ScreenStackHeaderCenterView = (\n  props: React.PropsWithChildren<ViewProps>\n): JSX.Element => (\n  <ScreensNativeModules.NativeScreenStackHeaderSubview\n    {...props}\n    type=\"center\"\n    style={styles.headerSubview}\n  />\n);\n\nconst ScreenStackHeaderSearchBarView = (\n  props: React.PropsWithChildren<SearchBarProps>\n): JSX.Element => (\n  <ScreensNativeModules.NativeScreenStackHeaderSubview\n    {...props}\n    type=\"searchBar\"\n    style={styles.headerSubview}\n  />\n);\n\nexport type {\n  StackPresentationTypes,\n  StackAnimationTypes,\n  BlurEffectTypes,\n  ScreenReplaceTypes,\n  ScreenOrientationTypes,\n  HeaderSubviewTypes,\n  ScreenProps,\n  ScreenContainerProps,\n  ScreenStackProps,\n  ScreenStackHeaderConfigProps,\n  SearchBarProps,\n};\n\n// context to be used when the user wants to use enhanced implementation\n// e.g. to use `useReanimatedTransitionProgress` (see `reanimated` folder in repo)\nconst ScreenContext = React.createContext(InnerScreen);\n\nclass Screen extends React.Component<ScreenProps> {\n  static contextType = ScreenContext;\n\n  render() {\n    const ScreenWrapper = (this.context || InnerScreen) as React.ElementType;\n    return <ScreenWrapper {...this.props} />;\n  }\n}\n\nmodule.exports = {\n  // these are classes so they are not evaluated until used\n  // so no need to use getters for them\n  Screen,\n  ScreenContainer,\n  ScreenContext,\n  ScreenStack,\n  InnerScreen,\n  SearchBar,\n  FullWindowOverlay,\n\n  get NativeScreen() {\n    return ScreensNativeModules.NativeScreen;\n  },\n\n  get NativeScreenContainer() {\n    return ScreensNativeModules.NativeScreenContainer;\n  },\n\n  get NativeScreenNavigationContainer() {\n    return ScreensNativeModules.NativeScreenNavigationContainer;\n  },\n\n  get ScreenStackHeaderConfig() {\n    return ScreensNativeModules.NativeScreenStackHeaderConfig;\n  },\n  get ScreenStackHeaderSubview() {\n    return ScreensNativeModules.NativeScreenStackHeaderSubview;\n  },\n  get SearchBarCommands() {\n    return ScreensNativeModules.NativeSearchBarCommands;\n  },\n  // these are functions and will not be evaluated until used\n  // so no need to use getters for them\n  ScreenStackHeaderBackButtonImage,\n  ScreenStackHeaderRightView,\n  ScreenStackHeaderLeftView,\n  ScreenStackHeaderCenterView,\n  ScreenStackHeaderSearchBarView,\n\n  enableScreens,\n  enableFreeze,\n  screensEnabled,\n  shouldUseActivityState,\n  useTransitionProgress,\n\n  isSearchBarAvailableForCurrentPlatform,\n  isNewBackTitleImplementation,\n  executeNativeBackPress,\n};\n"],"mappings":";;;;;;;;;;;;;;;;;AACA,IAAAA,MAAA,GAAAC,uBAAA,CAAAC,OAAA;AACA,IAAAC,YAAA,GAAAD,OAAA;AAYA,IAAAE,YAAA,GAAAF,OAAA;AACA,IAAAG,QAAA,GAAAH,OAAA;AAEA,IAAAI,0BAAA,GAAAC,sBAAA,CAAAL,OAAA;AACA,IAAAM,sBAAA,GAAAD,sBAAA,CAAAL,OAAA;AAeA,IAAAO,MAAA,GAAAP,OAAA;AAIiB,SAAAK,uBAAAG,GAAA;EAAA,OAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA;IAAAE,OAAA,EAAAF;EAAA;AAAA;AAAA,SAAAG,yBAAAC,WAAA;EAAA,WAAAC,OAAA;EAAA,IAAAC,iBAAA,OAAAD,OAAA;EAAA,IAAAE,gBAAA,OAAAF,OAAA;EAAA,QAAAF,wBAAA,YAAAA,yBAAAC,WAAA;IAAA,OAAAA,WAAA,GAAAG,gBAAA,GAAAD,iBAAA;EAAA,GAAAF,WAAA;AAAA;AAAA,SAAAb,wBAAAS,GAAA,EAAAI,WAAA;EAAA,KAAAA,WAAA,IAAAJ,GAAA,IAAAA,GAAA,CAAAC,UAAA;IAAA,OAAAD,GAAA;EAAA;EAAA,IAAAA,GAAA,oBAAAA,GAAA,wBAAAA,GAAA;IAAA;MAAAE,OAAA,EAAAF;IAAA;EAAA;EAAA,IAAAQ,KAAA,GAAAL,wBAAA,CAAAC,WAAA;EAAA,IAAAI,KAAA,IAAAA,KAAA,CAAAC,GAAA,CAAAT,GAAA;IAAA,OAAAQ,KAAA,CAAAE,GAAA,CAAAV,GAAA;EAAA;EAAA,IAAAW,MAAA;EAAA,IAAAC,qBAAA,GAAAC,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAAE,wBAAA;EAAA,SAAAC,GAAA,IAAAhB,GAAA;IAAA,IAAAgB,GAAA,kBAAAH,MAAA,CAAAI,SAAA,CAAAC,cAAA,CAAAC,IAAA,CAAAnB,GAAA,EAAAgB,GAAA;MAAA,IAAAI,IAAA,GAAAR,qBAAA,GAAAC,MAAA,CAAAE,wBAAA,CAAAf,GAAA,EAAAgB,GAAA;MAAA,IAAAI,IAAA,KAAAA,IAAA,CAAAV,GAAA,IAAAU,IAAA,CAAAC,GAAA;QAAAR,MAAA,CAAAC,cAAA,CAAAH,MAAA,EAAAK,GAAA,EAAAI,IAAA;MAAA;QAAAT,MAAA,CAAAK,GAAA,IAAAhB,GAAA,CAAAgB,GAAA;MAAA;IAAA;EAAA;EAAAL,MAAA,CAAAT,OAAA,GAAAF,GAAA;EAAA,IAAAQ,KAAA;IAAAA,KAAA,CAAAa,GAAA,CAAArB,GAAA,EAAAW,MAAA;EAAA;EAAA,OAAAA,MAAA;AAAA;AAAA,SAAAW,SAAA;EAAAA,QAAA,GAAAT,MAAA,CAAAU,MAAA,GAAAV,MAAA,CAAAU,MAAA,CAAAC,IAAA,eAAAC,MAAA;IAAA,SAAAC,CAAA,MAAAA,CAAA,GAAAC,SAAA,CAAAC,MAAA,EAAAF,CAAA;MAAA,IAAAG,MAAA,GAAAF,SAAA,CAAAD,CAAA;MAAA,SAAAV,GAAA,IAAAa,MAAA;QAAA,IAAAhB,MAAA,CAAAI,SAAA,CAAAC,cAAA,CAAAC,IAAA,CAAAU,MAAA,EAAAb,GAAA;UAAAS,MAAA,CAAAT,GAAA,IAAAa,MAAA,CAAAb,GAAA;QAAA;MAAA;IAAA;IAAA,OAAAS,MAAA;EAAA;EAAA,OAAAH,QAAA,CAAAQ,KAAA,OAAAH,SAAA;AAAA;AAAA,SAAAI,gBAAA/B,GAAA,EAAAgB,GAAA,EAAAgB,KAAA;EAAAhB,GAAA,GAAAiB,cAAA,CAAAjB,GAAA;EAAA,IAAAA,GAAA,IAAAhB,GAAA;IAAAa,MAAA,CAAAC,cAAA,CAAAd,GAAA,EAAAgB,GAAA;MAAAgB,KAAA,EAAAA,KAAA;MAAAE,UAAA;MAAAC,YAAA;MAAAC,QAAA;IAAA;EAAA;IAAApC,GAAA,CAAAgB,GAAA,IAAAgB,KAAA;EAAA;EAAA,OAAAhC,GAAA;AAAA;AAAA,SAAAiC,eAAAI,GAAA;EAAA,IAAArB,GAAA,GAAAsB,YAAA,CAAAD,GAAA;EAAA,cAAArB,GAAA,gBAAAA,GAAA,GAAAuB,MAAA,CAAAvB,GAAA;AAAA;AAAA,SAAAsB,aAAAE,KAAA,EAAAC,IAAA;EAAA,WAAAD,KAAA,iBAAAA,KAAA,kBAAAA,KAAA;EAAA,IAAAE,IAAA,GAAAF,KAAA,CAAAG,MAAA,CAAAC,WAAA;EAAA,IAAAF,IAAA,KAAAG,SAAA;IAAA,IAAAC,GAAA,GAAAJ,IAAA,CAAAvB,IAAA,CAAAqB,KAAA,EAAAC,IAAA;IAAA,WAAAK,GAAA,sBAAAA,GAAA;IAAA,UAAAC,SAAA;EAAA;EAAA,QAAAN,IAAA,gBAAAF,MAAA,GAAAS,MAAA,EAAAR,KAAA;AAAA;AAGjB,IAAMS,mBAAmB,GACvBxD,YAAA,CAAAyD,QAAQ,CAACC,EAAE,KAAK,KAAK,IACrB1D,YAAA,CAAAyD,QAAQ,CAACC,EAAE,KAAK,SAAS,IACzB1D,YAAA,CAAAyD,QAAQ,CAACC,EAAE,KAAK,SAAS;AAE3B,IAAIC,cAAc,GAAGH,mBAAmB;AAExC,SAASI,aAAaA,CAAA,EAAmC;EAAA,IAAlCC,mBAAmB,GAAA3B,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAkB,SAAA,GAAAlB,SAAA,MAAG,IAAI;EAC/CyB,cAAc,GAAGH,mBAAmB,IAAIK,mBAAmB;EAC3D,IAAIF,cAAc,IAAI,CAAC3D,YAAA,CAAA8D,SAAS,CAACC,oBAAoB,CAAC,WAAW,CAAC,EAAE;IAClEC,OAAO,CAACC,KAAK,CACV,wGACH,CAAC;EACH;AACF;AAEA,IAAIC,aAAa,GAAG,KAAK;AAEzB,SAASC,YAAYA,CAAA,EAAuC;EAAA,IAAtCC,uBAAuB,GAAAlC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAkB,SAAA,GAAAlB,SAAA,MAAG,IAAI;EAClD,IAAMmC,KAAK,GAAGC,QAAQ,CAACpE,QAAA,CAAAqE,OAAO,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EAG7C,IAAI,EAAEH,KAAK,KAAK,CAAC,IAAIA,KAAK,IAAI,EAAE,CAAC,IAAID,uBAAuB,EAAE;IAC5DJ,OAAO,CAACS,IAAI,CACV,kIACF,CAAC;EACH;EAEAP,aAAa,GAAGE,uBAAuB;AACzC;AAGA,IAAMM,sBAAsB,GAAG,IAAI;AAEnC,SAASC,cAAcA,CAAA,EAAY;EACjC,OAAOhB,cAAc;AACvB;AAwBA,IAAIiB,iBAAmD;AACvD,IAAIC,0BAAqE;AACzE,IAAIC,oCAA+E;AACnF,IAAIC,iBAAwD;AAC5D,IAAIC,6BAAgF;AACpF,IAAIC,8BAEH;AACD,IAAIC,oBAAsD;AAE1D,IAAIC,eAC4B;AAChC,IAAIC,uBAA8C;AAElD,IAAIC,uBAIH;AAED,IAAMC,oBAAoB,GAAG;EAC3B,IAAIC,YAAYA,CAAA,EAAG;IACjBX,iBAAiB,GACfA,iBAAiB,IAAI7E,OAAO,CAAC,gCAAgC,CAAC,CAACU,OAAO;IACxE,OAAOmE,iBAAiB;EAC1B,CAAC;EAED,IAAIY,qBAAqBA,CAAA,EAAG;IAC1BX,0BAA0B,GACxBA,0BAA0B,IAC1B9E,OAAO,CAAC,yCAAyC,CAAC,CAACU,OAAO;IAC5D,OAAOoE,0BAA0B;EACnC,CAAC;EAED,IAAIY,+BAA+BA,CAAA,EAAG;IACpCX,oCAAoC,GAClCA,oCAAoC,KACnC9E,YAAA,CAAAyD,QAAQ,CAACC,EAAE,KAAK,KAAK,GAClB3D,OAAO,CAAC,mDAAmD,CAAC,CAACU,OAAO,GACpE,IAAI,CAAC+E,qBAAqB,CAAC;IACjC,OAAOV,oCAAoC;EAC7C,CAAC;EAED,IAAIC,iBAAiBA,CAAA,EAAG;IACtBA,iBAAiB,GACfA,iBAAiB,IACjBhF,OAAO,CAAC,qCAAqC,CAAC,CAACU,OAAO;IACxD,OAAOsE,iBAAiB;EAC1B,CAAC;EAED,IAAIC,6BAA6BA,CAAA,EAAG;IAClCA,6BAA6B,GAC3BA,6BAA6B,IAC7BjF,OAAO,CAAC,iDAAiD,CAAC,CAACU,OAAO;IACpE,OAAOuE,6BAA6B;EACtC,CAAC;EAED,IAAIC,8BAA8BA,CAAA,EAAG;IACnCA,8BAA8B,GAC5BA,8BAA8B,IAC9BlF,OAAO,CAAC,kDAAkD,CAAC,CAACU,OAAO;IACrE,OAAOwE,8BAA8B;EACvC,CAAC;EAED,IAAIE,eAAeA,CAAA,EAAG;IACpBA,eAAe,GACbA,eAAe,IAAIpF,OAAO,CAAC,mCAAmC,CAAC,CAACU,OAAO;IACzE,OAAO0E,eAAe;EACxB,CAAC;EAED,IAAIC,uBAAuBA,CAAA,EAAG;IAC5BA,uBAAuB,GACrBA,uBAAuB,IACvBrF,OAAO,CAAC,mCAAmC,CAAC,CAAC2F,QAAQ;IACvD,OAAON,uBAAuB;EAChC,CAAC;EAED,IAAIC,uBAAuBA,CAAA,EAAG;IAC5BA,uBAAuB,GACrBA,uBAAuB,IACvBtF,OAAO,CAAC,2CAA2C,CAAC,CAACU,OAAO;IAC9D,OAAO4E,uBAAuB;EAChC;AACF,CAAC;AASD,SAASM,aAAaA,CAAAC,IAAA,EAA2C;EAAA,IAAxCC,MAAM,GAAgCD,IAAA,CAAtCC,MAAM;IAAEC,QAAA,GAA8BF,IAAA,CAA9BE,QAAA;EAE/B,IAAAC,qBAAA,GAAsClG,MAAA,CAAAY,OAAK,CAACuF,QAAQ,CAAC,KAAK,CAAC;IAAAC,sBAAA,OAAAC,eAAA,CAAAzF,OAAA,EAAAsF,qBAAA;IAApDI,WAAW,GAAAF,sBAAA;IAAEG,cAAc,GAAAH,sBAAA;EAElC,IAAApG,MAAA,CAAAwG,SAAS,EAAC,YAAM;IACd,IAAMC,EAAE,GAAGC,YAAY,CAAC,YAAM;MAC5BH,cAAc,CAACP,MAAM,CAAC;IACxB,CAAC,CAAC;IACF,OAAO,YAAM;MACXW,cAAc,CAACF,EAAE,CAAC;IACpB,CAAC;EACH,CAAC,EAAE,CAACT,MAAM,CAAC,CAAC;EAEZ,OAAOhG,MAAA,CAAAY,OAAA,CAAAgG,aAAA,CAACxG,YAAA,CAAAyG,MAAM;IAACb,MAAM,EAAEA,MAAM,GAAGM,WAAW,GAAG;EAAM,GAAEL,QAAiB,CAAC;AAC1E;AAEA,SAASa,WAAWA,CAACC,KAAuB,EAAE;EAC5C,IAAQd,QAAQ,GAAcc,KAAK,CAA3Bd,QAAQ;IAAKe,IAAA,OAAAC,yBAAA,CAAArG,OAAA,EAASmG,KAAK,EAAAG,SAAA;EACnC,IAAMC,IAAI,GAAGnH,MAAA,CAAAY,OAAK,CAACwG,QAAQ,CAACC,KAAK,CAACpB,QAAQ,CAAC;EAE3C,IAAMqB,kBAAkB,GAAGtH,MAAA,CAAAY,OAAK,CAACwG,QAAQ,CAACG,GAAG,CAACtB,QAAQ,EAAE,UAACuB,KAAK,EAAEC,KAAK,EAAK;IAAA,IAAAC,iBAAA,EAAAC,kBAAA,EAAAC,qBAAA,EAAAC,mBAAA;IAExE,IAAQd,KAAK,GAAUS,KAAK,CAApBT,KAAK;MAAErF,GAAA,GAAQ8F,KAAK,CAAb9F,GAAA;IACf,IAAMoG,UAAU,IAAAJ,iBAAA,GAAGX,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEe,UAAU,cAAAJ,iBAAA,cAAAA,iBAAA,GAAIX,KAAK,aAALA,KAAK,gBAAAY,kBAAA,GAALZ,KAAK,CAAEgB,WAAW,cAAAJ,kBAAA,uBAAlBA,kBAAA,CAAqBjG,GAAG,CAAC;IACjE,IAAMsG,aAAa,IAAAJ,qBAAA,GAAGE,UAAU,aAAVA,UAAU,gBAAAD,mBAAA,GAAVC,UAAU,CAAEG,OAAO,cAAAJ,mBAAA,uBAAnBA,mBAAA,CAAqBK,YAAY,cAAAN,qBAAA,cAAAA,qBAAA,GAAIvD,aAAa;IAExE,OACErE,MAAA,CAAAY,OAAA,CAAAgG,aAAA,CAACd,aAAa;MAACE,MAAM,EAAEgC,aAAa,IAAIb,IAAI,GAAGM,KAAK,GAAG;IAAE,GACtDD,KACY,CAAC;EAEpB,CAAC,CAAC;EAEF,OACExH,MAAA,CAAAY,OAAA,CAAAgG,aAAA,CAACnB,oBAAoB,CAACP,iBAAiB,EAAK8B,IAAI,EAC7CM,kBACqC,CAAC;AAE7C;AAAA,IAcMa,WAAW,aAAAC,qBAAA;EAAsC,SAAAD,YAAA;IAAA,IAAAE,KAAA;IAAA,IAAAC,gBAAA,CAAA1H,OAAA,QAAAuH,WAAA;IAAAE,KAAA,GAAAE,UAAA,OAAAJ,WAAA,EAAA9F,SAAA;IAAAI,eAAA,CAAA4F,KAAA,SACD,IAAI;IAAA5F,eAAA,CAAA4F,KAAA,aACtC,IAAIlI,YAAA,CAAAqI,QAAQ,CAACC,KAAK,CAAC,CAAC,CAAC;IAAAhG,eAAA,CAAA4F,KAAA,cACpB,IAAIlI,YAAA,CAAAqI,QAAQ,CAACC,KAAK,CAAC,CAAC,CAAC;IAAAhG,eAAA,CAAA4F,KAAA,kBACjB,IAAIlI,YAAA,CAAAqI,QAAQ,CAACC,KAAK,CAAC,CAAC,CAAC;IAAAhG,eAAA,CAAA4F,KAAA,YAMlC,UAAAK,GAAyC,EAAW;MAAA,IAAAC,qBAAA,EAAAC,WAAA;MAC5DP,KAAA,CAAKK,GAAG,GAAGA,GAAG;MACd,CAAAC,qBAAA,IAAAC,WAAA,GAAAP,KAAA,CAAKtB,KAAK,EAAC8B,cAAc,cAAAF,qBAAA,eAAzBA,qBAAA,CAAA9G,IAAA,CAAA+G,WAAA,EAA4BF,GAAG,CAAC;IAClC,CAAC;IAAA,OAAAL,KAAA;EAAA;EAAA,IAAAS,UAAA,CAAAlI,OAAA,EAAAuH,WAAA,EAAAC,qBAAA;EAAA,WAAAW,aAAA,CAAAnI,OAAA,EAAAuH,WAAA;IAAAzG,GAAA;IAAAgB,KAAA,EAPD,SAAAsG,eAAejC,KAAkB,EAAQ;MAAA,IAAAkC,SAAA;MACvC,CAAAA,SAAA,OAAI,CAACP,GAAG,cAAAO,SAAA,eAARA,SAAA,CAAUD,cAAc,CAACjC,KAAK,CAAC;IACjC;EAAA;IAAArF,GAAA;IAAAgB,KAAA,EAOA,SAAAwG,OAAA,EAAS;MAAA,IAAAC,MAAA;MACP,IAAAC,YAAA,GAII,IAAI,CAACrC,KAAK;QAAAsC,oBAAA,GAAAD,YAAA,CAHZE,OAAO;QAAPA,OAAO,GAAAD,oBAAA,cAAGvF,cAAc,GAAAuF,oBAAA;QAAAE,qBAAA,GAAAH,YAAA,CACxBlB,YAAY;QAAZA,YAAY,GAAAqB,qBAAA,cAAGlF,aAAa,GAAAkF,qBAAA;QACzBvC,IAAA,OAAAC,yBAAA,CAAArG,OAAA,EAAAwI,YAAA,EAAAI,UAAA;MAKL,IAAAC,qBAAA,GAMIzC,IAAI,CALN0C,mBAAmB;QAAnBA,mBAAmB,GAAAD,qBAAA,cAAG,OAAO,GAAAA,qBAAA;QAAAE,qBAAA,GAK3B3C,IAAI,CAJN4C,0BAA0B;QAA1BA,0BAA0B,GAAAD,qBAAA,cAAG,KAAK,GAAAA,qBAAA;QAAAE,qBAAA,GAIhC7C,IAAI,CAHN8C,mBAAmB;QAAnBA,mBAAmB,GAAAD,qBAAA,cAAG,KAAK,GAAAA,qBAAA;QAAAE,qBAAA,GAGzB/C,IAAI,CAFNgD,iBAAiB;QAAjBA,iBAAiB,GAAAD,qBAAA,cAAG,CAAC,GAAG,GAAAA,qBAAA;QAAAE,qBAAA,GAEtBjD,IAAI,CADNkD,8BAA8B;QAA9BA,8BAA8B,GAAAD,qBAAA,cAAG,OAAAA,qBAAA;MAGnC,IAAIX,OAAO,IAAI3F,mBAAmB,EAAE;QAAA,IAAAwG,qBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA;QAClCjF,oBAAoB,GAClBA,oBAAoB,IACpBlF,YAAA,CAAAqI,QAAQ,CAAC+B,uBAAuB,CAAC9E,oBAAoB,CAACC,YAAY,CAAC;QAErE,IAIE8E,MAAM,GAOJxD,IAAI,CAPNwD,MAAM;UACNC,aAAa,GAMXzD,IAAI,CANNyD,aAAa;UACbxE,QAAQ,GAKNe,IAAI,CALNf,QAAQ;UACRyE,aAAa,GAIX1D,IAAI,CAJN0D,aAAa;UACbC,uBAAuB,GAGrB3D,IAAI,CAHN2D,uBAAuB;UACvBC,eAAe,GAEb5D,IAAI,CAFN4D,eAAe;UACZ7D,KAAA,OAAAE,yBAAA,CAAArG,OAAA,EACDoG,IAAI,EAAA6D,UAAA;QAER,IAAIL,MAAM,KAAKjH,SAAS,IAAIkH,aAAa,KAAKlH,SAAS,EAAE;UACvDY,OAAO,CAACS,IAAI,CACV,+QACF,CAAC;UACD6F,aAAa,GAAGD,MAAM,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC;QACtC;QAEA,IAAMM,SAAS,GAAI,SAAbA,SAASA,CAAIpC,GAAe,EAAK;UAAA,IAAAqC,eAAA;UACrC,IAAIrC,GAAG,aAAHA,GAAG,gBAAAqC,eAAA,GAAHrC,GAAG,CAAEsC,UAAU,cAAAD,eAAA,gBAAAA,eAAA,GAAfA,eAAA,CAAiBE,eAAe,cAAAF,eAAA,eAAhCA,eAAA,CAAkCG,KAAK,EAAE;YAC3CxC,GAAG,CAACsC,UAAU,CAACC,eAAe,CAACC,KAAK,GAAA3J,MAAA,CAAAU,MAAA,KAC/ByG,GAAG,CAACsC,UAAU,CAACC,eAAe,CAACC,KAAK;cACvCC,OAAO,EAAE;YAAA,EACV;YACDhC,MAAI,CAACiC,MAAM,CAAC1C,GAAG,CAAC;UAClB;QACF,CAAC;QAED,OACE1I,MAAA,CAAAY,OAAA,CAAAgG,aAAA,CAACd,aAAa;UAACE,MAAM,EAAEkC,YAAY,IAAIuC,aAAa,KAAK;QAAE,GACzDzK,MAAA,CAAAY,OAAA,CAAAgG,aAAA,CAACvB,oBAAoB,EAAArD,QAAA,KACf+E,KAAK;UACT0D,aAAa,EAAEA,aAAc;UAC7Bf,mBAAmB,EAAEA,mBAAoB;UACzCE,0BAA0B,EAAEA,0BAA2B;UACvDE,mBAAmB,EAAEA,mBAAoB;UACzCE,iBAAiB,EAAEA,iBAAkB;UACrCE,8BAA8B,EAAEA,8BAA+B;UAC/DS,uBAAuB,EAAE;YACvBU,KAAK,GAAAlB,qBAAA,GAAEQ,uBAAuB,aAAvBA,uBAAuB,uBAAvBA,uBAAuB,CAAEU,KAAK,cAAAlB,qBAAA,cAAAA,qBAAA,GAAI,CAAC,CAAC;YAC3CmB,GAAG,GAAAlB,sBAAA,GAAEO,uBAAuB,aAAvBA,uBAAuB,uBAAvBA,uBAAuB,CAAEW,GAAG,cAAAlB,sBAAA,cAAAA,sBAAA,GAAI,CAAC,CAAC;YACvCmB,GAAG,GAAAlB,sBAAA,GAAEM,uBAAuB,aAAvBA,uBAAuB,uBAAvBA,uBAAuB,CAAEY,GAAG,cAAAlB,sBAAA,cAAAA,sBAAA,GAAI,CAAC,CAAC;YACvCmB,MAAM,GAAAlB,sBAAA,GAAEK,uBAAuB,aAAvBA,uBAAuB,uBAAvBA,uBAAuB,CAAEa,MAAM,cAAAlB,sBAAA,cAAAA,sBAAA,GAAI,CAAC;UAC9C;UAGA5B,GAAG,EAAEoC,SAAU;UACfW,oBAAoB,EAClB,CAACf,aAAa,GACVnH,SAAS,GACTpD,YAAA,CAAAqI,QAAQ,CAACkD,KAAK,CACZ,CACE;YACEC,WAAW,EAAE;cACXC,QAAQ,EAAE,IAAI,CAACA,QAAQ;cACvBC,OAAO,EAAE,IAAI,CAACA,OAAO;cACrBC,YAAY,EAAE,IAAI,CAACA;YACrB;UACF,CAAC,CACF,EACD;YAAEC,eAAe,EAAE;UAAK,CAC1B,CACL;UACDnB,eAAe,EACbA,eAAe,aAAfA,eAAe,cAAfA,eAAe,GACd,YAAM,CACL;QAEH,IACA,CAACF,aAAa,GACbzE,QAAQ,GAERjG,MAAA,CAAAY,OAAA,CAAAgG,aAAA,CAACtG,0BAAA,CAAAM,OAAyB,CAACoL,QAAQ;UACjCtJ,KAAK,EAAE;YACLkJ,QAAQ,EAAE,IAAI,CAACA,QAAQ;YACvBC,OAAO,EAAE,IAAI,CAACA,OAAO;YACrBC,YAAY,EAAE,IAAI,CAACA;UACrB;QAAE,GACD7F,QACiC,CAElB,CACT,CAAC;MAEpB,CAAC,MAAM;QAEL,IACEuE,OAAM,GAMJxD,IAAI,CANNwD,MAAM;UACNC,cAAa,GAKXzD,IAAI,CALNyD,aAAa;UACbS,KAAK,GAIHlE,IAAI,CAJNkE,KAAK;UAELrC,cAAc,GAEZ7B,IAAI,CAFN6B,cAAc;UACX9B,MAAA,OAAAE,yBAAA,CAAArG,OAAA,EACDoG,IAAI,EAAAiF,UAAA;QAER,IAAIzB,OAAM,KAAKjH,SAAS,IAAIkH,cAAa,KAAKlH,SAAS,EAAE;UACvDkH,cAAa,GAAGD,OAAM,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC;QACtC;QACA,OACExK,MAAA,CAAAY,OAAA,CAAAgG,aAAA,CAACzG,YAAA,CAAAqI,QAAQ,CAAC0D,IAAI,EAAAlK,QAAA;UACZkJ,KAAK,EAAE,CAACA,KAAK,EAAE;YAAEC,OAAO,EAAEV,cAAa,KAAK,CAAC,GAAG,MAAM,GAAG;UAAO,CAAC,CAAE;UACnE/B,GAAG,EAAE,IAAI,CAAC0C;QAAO,GACbrE,MAAK,CACV,CAAC;MAEN;IACF;EAAA;AAAA,EAjJwB/G,MAAA,CAAAY,OAAK,CAACuL,SAAS;AAoJzC,SAASC,eAAeA,CAACrF,KAA2B,EAAE;EACpD,IAAAsF,cAAA,GAA4DtF,KAAK,CAAzDuC,OAAO;IAAPA,OAAO,GAAA+C,cAAA,cAAGvI,cAAc,GAAAuI,cAAA;IAAEC,YAAY,GAAcvF,KAAK,CAA/BuF,YAAY;IAAKtF,IAAA,OAAAC,yBAAA,CAAArG,OAAA,EAASmG,KAAK,EAAAwF,UAAA;EAEjE,IAAIjD,OAAO,IAAI3F,mBAAmB,EAAE;IAClC,IAAI2I,YAAY,EAAE;MAChB,OAAOtM,MAAA,CAAAY,OAAA,CAAAgG,aAAA,CAACnB,oBAAoB,CAACG,+BAA+B,EAAKoB,IAAO,CAAC;IAC3E;IACA,OAAOhH,MAAA,CAAAY,OAAA,CAAAgG,aAAA,CAACnB,oBAAoB,CAACE,qBAAqB,EAAKqB,IAAO,CAAC;EACjE;EACA,OAAOhH,MAAA,CAAAY,OAAA,CAAAgG,aAAA,CAACzG,YAAA,CAAA+L,IAAI,EAAKlF,IAAO,CAAC;AAC3B;AAEA,SAASwF,iBAAiBA,CAACzF,KAA8B,EAAE;EACzD,IAAI5G,YAAA,CAAAyD,QAAQ,CAACC,EAAE,KAAK,KAAK,EAAE;IACzBM,OAAO,CAACS,IAAI,CAAC,2DAA2D,CAAC;IACzE,OAAO5E,MAAA,CAAAY,OAAA,CAAAgG,aAAA,CAACzG,YAAA,CAAA+L,IAAI,EAAKnF,KAAQ,CAAC;EAC5B;EACA,OACE/G,MAAA,CAAAY,OAAA,CAAAgG,aAAA,CAACnB,oBAAoB,CAACD,uBAAuB;IAC3C0F,KAAK,EAAE;MAAEuB,QAAQ,EAAE,UAAU;MAAEC,KAAK,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAO;EAAE,GAC9D5F,KAAK,CAACd,QACqC,CAAC;AAEnD;AAEA,IAAM2G,MAAM,GAAGzM,YAAA,CAAA0M,UAAU,CAACC,MAAM,CAAC;EAC/BC,aAAa,EAAE;IACbN,QAAQ,EAAE,UAAU;IACpBlB,GAAG,EAAE,CAAC;IACNyB,KAAK,EAAE,CAAC;IACRC,aAAa,EAAE,KAAK;IACpBC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEF,IAAMC,gCAAgC,GAAI,SAApCA,gCAAgCA,CAAIrG,KAAiB;EAAA,OACzD/G,MAAA,CAAAY,OAAA,CAAAgG,aAAA,CAACnB,oBAAoB,CAACL,8BAA8B;IAClDiI,IAAI,EAAC,MAAM;IACXnC,KAAK,EAAE0B,MAAM,CAACG;EAAc,GAC5B/M,MAAA,CAAAY,OAAA,CAAAgG,aAAA,CAACzG,YAAA,CAAAmN,KAAK,EAAAtL,QAAA;IAACuL,UAAU,EAAC,QAAQ;IAACC,YAAY,EAAE;EAAE,GAAKzG,KAAK,CAAG,CACL,CACtD;AAAA;AAAA,IAEK0G,SAAS,aAAAC,sBAAA;EAGb,SAAAD,UAAY1G,KAAqB,EAAE;IAAA,IAAA4G,MAAA;IAAA,IAAArF,gBAAA,CAAA1H,OAAA,QAAA6M,SAAA;IACjCE,MAAA,GAAApF,UAAA,OAAAkF,SAAA,GAAM1G,KAAK;IAAEtE,eAAA,CAAAkL,MAAA;IACbA,MAAA,CAAKC,kBAAkB,GAAG5N,MAAA,CAAAY,OAAK,CAACiN,SAAS,CAAC,CAAC;IAAA,OAAAF,MAAA;EAC7C;EAAA,IAAA7E,UAAA,CAAAlI,OAAA,EAAA6M,SAAA,EAAAC,sBAAA;EAAA,WAAA3E,aAAA,CAAAnI,OAAA,EAAA6M,SAAA;IAAA/L,GAAA;IAAAgB,KAAA,EAEA,SAAAoL,mBAAmBC,MAAwC,EAAE;MAC3D,IAAMrF,GAAG,GAAG,IAAI,CAACkF,kBAAkB,CAACI,OAAO;MAC3C,IAAItF,GAAG,EAAE;QACPqF,MAAM,CAACrF,GAAG,CAAC;MACb,CAAC,MAAM;QACLvE,OAAO,CAACS,IAAI,CACV,mEACF,CAAC;MACH;IACF;EAAA;IAAAlD,GAAA;IAAAgB,KAAA,EAEA,SAAAuL,KAAA,EAAO;MACL,IAAI,CAACH,kBAAkB,CAAC,UAAApF,GAAG;QAAA,OACzBjD,oBAAoB,CAACF,uBAAuB,CAAC0I,IAAI,CAACvF,GAAG,CACvD;MAAA,EAAC;IACH;EAAA;IAAAhH,GAAA;IAAAgB,KAAA,EAEA,SAAAwL,MAAA,EAAQ;MACN,IAAI,CAACJ,kBAAkB,CAAC,UAAApF,GAAG;QAAA,OACzBjD,oBAAoB,CAACF,uBAAuB,CAAC2I,KAAK,CAACxF,GAAG,CACxD;MAAA,EAAC;IACH;EAAA;IAAAhH,GAAA;IAAAgB,KAAA,EAEA,SAAAyL,mBAAmBC,IAAa,EAAE;MAChC,IAAI,CAACN,kBAAkB,CAAC,UAAApF,GAAG;QAAA,OACzBjD,oBAAoB,CAACF,uBAAuB,CAAC4I,kBAAkB,CAACzF,GAAG,EAAE0F,IAAI,CAC3E;MAAA,EAAC;IACH;EAAA;IAAA1M,GAAA;IAAAgB,KAAA,EAEA,SAAA2L,UAAA,EAAY;MACV,IAAI,CAACP,kBAAkB,CAAC,UAAApF,GAAG;QAAA,OACzBjD,oBAAoB,CAACF,uBAAuB,CAAC8I,SAAS,CAAC3F,GAAG,CAC5D;MAAA,EAAC;IACH;EAAA;IAAAhH,GAAA;IAAAgB,KAAA,EAEA,SAAA4L,QAAQC,IAAY,EAAE;MACpB,IAAI,CAACT,kBAAkB,CAAC,UAAApF,GAAG;QAAA,OACzBjD,oBAAoB,CAACF,uBAAuB,CAAC+I,OAAO,CAAC5F,GAAG,EAAE6F,IAAI,CAChE;MAAA,EAAC;IACH;EAAA;IAAA7M,GAAA;IAAAgB,KAAA,EAEA,SAAAwG,OAAA,EAAS;MACP,IAAI,CAACzI,MAAA,CAAA+N,sCAAsC,EAAE;QAC3CrK,OAAO,CAACS,IAAI,CACV,+DACF,CAAC;QACD,OAAOzE,YAAA,CAAA+L,IAAI;MACb;MAEA,OACElM,MAAA,CAAAY,OAAA,CAAAgG,aAAA,CAACnB,oBAAoB,CAACH,eAAe,EAAAtD,QAAA,KAC/B,IAAI,CAAC+E,KAAK;QACd2B,GAAG,EAAE,IAAI,CAACkF;MAAmB,EAC9B,CAAC;IAEN;EAAA;AAAA,EA/DsB5N,MAAA,CAAAY,OAAK,CAACuL,SAAS;AAkEvC,IAAMsC,0BAA0B,GAC9B,SADIA,0BAA0BA,CAC9B1H,KAAyC;EAAA,OAEzC/G,MAAA,CAAAY,OAAA,CAAAgG,aAAA,CAACnB,oBAAoB,CAACL,8BAA8B,EAAApD,QAAA,KAC9C+E,KAAK;IACTsG,IAAI,EAAC,OAAO;IACZnC,KAAK,EAAE0B,MAAM,CAACG;EAAc,EAC7B,CACF;AAAA;AAED,IAAM2B,yBAAyB,GAC7B,SADIA,yBAAyBA,CAC7B3H,KAAyC;EAAA,OAEzC/G,MAAA,CAAAY,OAAA,CAAAgG,aAAA,CAACnB,oBAAoB,CAACL,8BAA8B,EAAApD,QAAA,KAC9C+E,KAAK;IACTsG,IAAI,EAAC,MAAM;IACXnC,KAAK,EAAE0B,MAAM,CAACG;EAAc,EAC7B,CACF;AAAA;AAED,IAAM4B,2BAA2B,GAC/B,SADIA,2BAA2BA,CAC/B5H,KAAyC;EAAA,OAEzC/G,MAAA,CAAAY,OAAA,CAAAgG,aAAA,CAACnB,oBAAoB,CAACL,8BAA8B,EAAApD,QAAA,KAC9C+E,KAAK;IACTsG,IAAI,EAAC,QAAQ;IACbnC,KAAK,EAAE0B,MAAM,CAACG;EAAc,EAC7B,CACF;AAAA;AAED,IAAM6B,8BAA8B,GAClC,SADIA,8BAA8BA,CAClC7H,KAA8C;EAAA,OAE9C/G,MAAA,CAAAY,OAAA,CAAAgG,aAAA,CAACnB,oBAAoB,CAACL,8BAA8B,EAAApD,QAAA,KAC9C+E,KAAK;IACTsG,IAAI,EAAC,WAAW;IAChBnC,KAAK,EAAE0B,MAAM,CAACG;EAAc,EAC7B,CACF;AAAA;AAkBD,IAAM8B,aAAa,GAAG7O,MAAA,CAAAY,OAAK,CAACkO,aAAa,CAAC3G,WAAW,CAAC;AAAA,IAEhD4G,MAAM,aAAAC,sBAAA;EAAA,SAAAD,OAAA;IAAA,IAAAzG,gBAAA,CAAA1H,OAAA,QAAAmO,MAAA;IAAA,OAAAxG,UAAA,OAAAwG,MAAA,EAAA1M,SAAA;EAAA;EAAA,IAAAyG,UAAA,CAAAlI,OAAA,EAAAmO,MAAA,EAAAC,sBAAA;EAAA,WAAAjG,aAAA,CAAAnI,OAAA,EAAAmO,MAAA;IAAArN,GAAA;IAAAgB,KAAA,EAGV,SAAAwG,OAAA,EAAS;MACP,IAAM+F,aAAa,GAAI,IAAI,CAACC,OAAO,IAAI/G,WAAiC;MACxE,OAAOnI,MAAA,CAAAY,OAAA,CAAAgG,aAAA,CAACqI,aAAa,EAAK,IAAI,CAAClI,KAAQ,CAAC;IAC1C;EAAA;AAAA,EANmB/G,MAAA,CAAAY,OAAK,CAACuL,SAAS;AAOnC1J,eAAA,CAPKsM,MAAM,iBACWF,aAAa;AAQpCM,MAAM,CAACC,OAAO,GAAG;EAGfL,MAAM,EAANA,MAAM;EACN3C,eAAe,EAAfA,eAAe;EACfyC,aAAa,EAAbA,aAAa;EACb/H,WAAW,EAAXA,WAAW;EACXqB,WAAW,EAAXA,WAAW;EACXsF,SAAS,EAATA,SAAS;EACTjB,iBAAiB,EAAjBA,iBAAiB;EAEjB,IAAI9G,YAAYA,CAAA,EAAG;IACjB,OAAOD,oBAAoB,CAACC,YAAY;EAC1C,CAAC;EAED,IAAIC,qBAAqBA,CAAA,EAAG;IAC1B,OAAOF,oBAAoB,CAACE,qBAAqB;EACnD,CAAC;EAED,IAAIC,+BAA+BA,CAAA,EAAG;IACpC,OAAOH,oBAAoB,CAACG,+BAA+B;EAC7D,CAAC;EAED,IAAIyJ,uBAAuBA,CAAA,EAAG;IAC5B,OAAO5J,oBAAoB,CAACN,6BAA6B;EAC3D,CAAC;EACD,IAAImK,wBAAwBA,CAAA,EAAG;IAC7B,OAAO7J,oBAAoB,CAACL,8BAA8B;EAC5D,CAAC;EACD,IAAImK,iBAAiBA,CAAA,EAAG;IACtB,OAAO9J,oBAAoB,CAACF,uBAAuB;EACrD,CAAC;EAGD6H,gCAAgC,EAAhCA,gCAAgC;EAChCqB,0BAA0B,EAA1BA,0BAA0B;EAC1BC,yBAAyB,EAAzBA,yBAAyB;EACzBC,2BAA2B,EAA3BA,2BAA2B;EAC3BC,8BAA8B,EAA9BA,8BAA8B;EAE9B7K,aAAa,EAAbA,aAAa;EACbO,YAAY,EAAZA,YAAY;EACZQ,cAAc,EAAdA,cAAc;EACdD,sBAAsB,EAAtBA,sBAAsB;EACtB2K,qBAAqB,EAArBhP,sBAAA,CAAAI,OAAqB;EAErB4N,sCAAsC,EAAtC/N,MAAA,CAAA+N,sCAAsC;EACtCiB,4BAA4B,EAA5BhP,MAAA,CAAAgP,4BAA4B;EAC5BC,sBAAsB,EAAtBjP,MAAA,CAAAiP;AACF,CAAC","ignoreList":[]}