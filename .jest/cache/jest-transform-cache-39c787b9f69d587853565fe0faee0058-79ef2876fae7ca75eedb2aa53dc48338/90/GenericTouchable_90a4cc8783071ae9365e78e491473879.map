{"version":3,"names":["React","_interopRequireWildcard","require","_reactNative","_State","_GestureButtons","TOUCHABLE_STATE","UNDETERMINED","BEGAN","MOVED_OUTSIDE","GenericTouchable","_React$Component","_this","_classCallCheck2","default","_len","arguments","length","args","Array","_key","_callSuper","concat","_defineProperty","_ref2","pointerInside","nativeEvent","onMoveIn","onMoveOut","_ref3","state","State","CANCELLED","FAILED","moveToState","Platform","OS","ACTIVE","STATE","handlePressIn","END","shouldCallOnPress","longPressDetected","pressOutTimeout","handleGoToUndetermined","_this$props$onPress","_this$props","props","onPress","call","_this$props$onLongPre","_this$props2","onLongPress","_inherits2","_createClass2","key","value","_this2","delayPressIn","pressInTimeout","setTimeout","time","delayLongPress","longPressTimeout","onLongPressDetected","handleMoveOutside","_this3","delayPressOut","_this4","clearTimeout","componentDidMount","reset","newState","_this$props$onStateCh","_this$props6","_this$props$onPressIn","_this$props3","onPressIn","_this$props$onPressOu","_this$props4","onPressOut","_this$props$onPressOu2","_this$props5","onStateChange","componentWillUnmount","render","_ref","_this$props$touchSoun","hitSlop","top","left","bottom","right","undefined","coreProps","accessible","accessibilityLabel","accessibilityHint","accessibilityRole","accessibilityState","accessibilityActions","onAccessibilityAction","nativeID","onLayout","createElement","BaseButton","_extends","style","containerStyle","onHandlerStateChange","disabled","onGestureEvent","shouldActivateOnStart","disallowInterruption","testID","touchSoundDisabled","enabled","extraButtonProps","Animated","View","children","Component","rippleColor","exclusive"],"sources":["GenericTouchable.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Component } from 'react';\nimport {\n  Animated,\n  Platform,\n  StyleProp,\n  ViewStyle,\n  TouchableWithoutFeedbackProps,\n  Insets,\n} from 'react-native';\n\nimport { State } from '../../State';\nimport { BaseButton } from '../GestureButtons';\n\nimport {\n  GestureEvent,\n  HandlerStateChangeEvent,\n} from '../../handlers/gestureHandlerCommon';\nimport { NativeViewGestureHandlerPayload } from '../../handlers/NativeViewGestureHandler';\nimport { TouchableNativeFeedbackExtraProps } from './TouchableNativeFeedback.android';\n\n/**\n * Each touchable is a states' machine which preforms transitions.\n * On very beginning (and on the very end or recognition) touchable is\n * UNDETERMINED. Then it moves to BEGAN. If touchable recognizes that finger\n * travel outside it transits to special MOVED_OUTSIDE state. Gesture recognition\n * finishes in UNDETERMINED state.\n */\nexport const TOUCHABLE_STATE = {\n  UNDETERMINED: 0,\n  BEGAN: 1,\n  MOVED_OUTSIDE: 2,\n} as const;\n\ntype TouchableState = typeof TOUCHABLE_STATE[keyof typeof TOUCHABLE_STATE];\n\nexport interface GenericTouchableProps\n  extends Omit<TouchableWithoutFeedbackProps, 'hitSlop'> {\n  // Decided to drop not used fields from RN's implementation.\n  // e.g. onBlur and onFocus as well as deprecated props. - TODO: this comment may be unuseful in this moment\n\n  // TODO: in RN these events get native event parameter, which prolly could be used in our implementation too\n  onPress?: () => void;\n  onPressIn?: () => void;\n  onPressOut?: () => void;\n  onLongPress?: () => void;\n\n  nativeID?: string;\n  shouldActivateOnStart?: boolean;\n  disallowInterruption?: boolean;\n\n  containerStyle?: StyleProp<ViewStyle>;\n  hitSlop?: Insets | number;\n}\n\ninterface InternalProps {\n  extraButtonProps: TouchableNativeFeedbackExtraProps;\n  onStateChange?: (oldState: TouchableState, newState: TouchableState) => void;\n}\n\n// TODO: maybe can be better\n// TODO: all clearTimeout have ! added, maybe they shouldn't ?\ntype Timeout = ReturnType<typeof setTimeout> | null | undefined;\n\n/**\n * GenericTouchable is not intented to be used as it is.\n * Should be treated as a source for the rest of touchables\n */\n\nexport default class GenericTouchable extends Component<\n  GenericTouchableProps & InternalProps\n> {\n  static defaultProps = {\n    delayLongPress: 600,\n    extraButtonProps: {\n      rippleColor: 'transparent',\n      exclusive: true,\n    },\n  };\n\n  // timeout handlers\n  pressInTimeout: Timeout;\n  pressOutTimeout: Timeout;\n  longPressTimeout: Timeout;\n\n  // This flag is required since recognition of longPress implies not-invoking onPress\n  longPressDetected = false;\n\n  pointerInside = true;\n\n  // State of touchable\n  STATE: TouchableState = TOUCHABLE_STATE.UNDETERMINED;\n\n  // handlePressIn in called on first touch on traveling inside component.\n  // Handles state transition with delay.\n  handlePressIn() {\n    if (this.props.delayPressIn) {\n      this.pressInTimeout = setTimeout(() => {\n        this.moveToState(TOUCHABLE_STATE.BEGAN);\n        this.pressInTimeout = null;\n      }, this.props.delayPressIn);\n    } else {\n      this.moveToState(TOUCHABLE_STATE.BEGAN);\n    }\n    if (this.props.onLongPress) {\n      const time =\n        (this.props.delayPressIn || 0) + (this.props.delayLongPress || 0);\n      this.longPressTimeout = setTimeout(this.onLongPressDetected, time);\n    }\n  }\n  // handleMoveOutside in called on traveling outside component.\n  // Handles state transition with delay.\n  handleMoveOutside() {\n    if (this.props.delayPressOut) {\n      this.pressOutTimeout =\n        this.pressOutTimeout ||\n        setTimeout(() => {\n          this.moveToState(TOUCHABLE_STATE.MOVED_OUTSIDE);\n          this.pressOutTimeout = null;\n        }, this.props.delayPressOut);\n    } else {\n      this.moveToState(TOUCHABLE_STATE.MOVED_OUTSIDE);\n    }\n  }\n\n  // handleGoToUndetermined transits to UNDETERMINED state with proper delay\n  handleGoToUndetermined() {\n    clearTimeout(this.pressOutTimeout!); // TODO: maybe it can be undefined\n    if (this.props.delayPressOut) {\n      this.pressOutTimeout = setTimeout(() => {\n        if (this.STATE === TOUCHABLE_STATE.UNDETERMINED) {\n          this.moveToState(TOUCHABLE_STATE.BEGAN);\n        }\n        this.moveToState(TOUCHABLE_STATE.UNDETERMINED);\n        this.pressOutTimeout = null;\n      }, this.props.delayPressOut);\n    } else {\n      if (this.STATE === TOUCHABLE_STATE.UNDETERMINED) {\n        this.moveToState(TOUCHABLE_STATE.BEGAN);\n      }\n      this.moveToState(TOUCHABLE_STATE.UNDETERMINED);\n    }\n  }\n\n  componentDidMount() {\n    this.reset();\n  }\n  // reset timeout to prevent memory leaks.\n  reset() {\n    this.longPressDetected = false;\n    this.pointerInside = true;\n    clearTimeout(this.pressInTimeout!);\n    clearTimeout(this.pressOutTimeout!);\n    clearTimeout(this.longPressTimeout!);\n    this.pressOutTimeout = null;\n    this.longPressTimeout = null;\n    this.pressInTimeout = null;\n  }\n\n  // All states' transitions are defined here.\n  moveToState(newState: TouchableState) {\n    if (newState === this.STATE) {\n      // Ignore dummy transitions\n      return;\n    }\n    if (newState === TOUCHABLE_STATE.BEGAN) {\n      // First touch and moving inside\n      this.props.onPressIn?.();\n    } else if (newState === TOUCHABLE_STATE.MOVED_OUTSIDE) {\n      // Moving outside\n      this.props.onPressOut?.();\n    } else if (newState === TOUCHABLE_STATE.UNDETERMINED) {\n      // Need to reset each time on transition to UNDETERMINED\n      this.reset();\n      if (this.STATE === TOUCHABLE_STATE.BEGAN) {\n        // ... and if it happens inside button.\n        this.props.onPressOut?.();\n      }\n    }\n    // Finally call lister (used by subclasses)\n    this.props.onStateChange?.(this.STATE, newState);\n    // ... and make transition.\n    this.STATE = newState;\n  }\n\n  onGestureEvent = ({\n    nativeEvent: { pointerInside },\n  }: GestureEvent<NativeViewGestureHandlerPayload>) => {\n    if (this.pointerInside !== pointerInside) {\n      if (pointerInside) {\n        this.onMoveIn();\n      } else {\n        this.onMoveOut();\n      }\n    }\n    this.pointerInside = pointerInside;\n  };\n\n  onHandlerStateChange = ({\n    nativeEvent,\n  }: HandlerStateChangeEvent<NativeViewGestureHandlerPayload>) => {\n    const { state } = nativeEvent;\n    if (state === State.CANCELLED || state === State.FAILED) {\n      // Need to handle case with external cancellation (e.g. by ScrollView)\n      this.moveToState(TOUCHABLE_STATE.UNDETERMINED);\n    } else if (\n      // This platform check is an implication of slightly different behavior of handlers on different platform.\n      // And Android \"Active\" state is achieving on first move of a finger, not on press in.\n      // On iOS event on \"Began\" is not delivered.\n      state === (Platform.OS !== 'android' ? State.ACTIVE : State.BEGAN) &&\n      this.STATE === TOUCHABLE_STATE.UNDETERMINED\n    ) {\n      // Moving inside requires\n      this.handlePressIn();\n    } else if (state === State.END) {\n      const shouldCallOnPress =\n        !this.longPressDetected &&\n        this.STATE !== TOUCHABLE_STATE.MOVED_OUTSIDE &&\n        this.pressOutTimeout === null;\n      this.handleGoToUndetermined();\n      if (shouldCallOnPress) {\n        // Calls only inside component whether no long press was called previously\n        this.props.onPress?.();\n      }\n    }\n  };\n\n  onLongPressDetected = () => {\n    this.longPressDetected = true;\n    // checked for in the caller of `onLongPressDetected`, but better to check twice\n    this.props.onLongPress?.();\n  };\n\n  componentWillUnmount() {\n    // to prevent memory leaks\n    this.reset();\n  }\n\n  onMoveIn() {\n    if (this.STATE === TOUCHABLE_STATE.MOVED_OUTSIDE) {\n      // This call is not throttled with delays (like in RN's implementation).\n      this.moveToState(TOUCHABLE_STATE.BEGAN);\n    }\n  }\n\n  onMoveOut() {\n    // long press should no longer be detected\n    clearTimeout(this.longPressTimeout!);\n    this.longPressTimeout = null;\n    if (this.STATE === TOUCHABLE_STATE.BEGAN) {\n      this.handleMoveOutside();\n    }\n  }\n\n  render() {\n    const hitSlop =\n      (typeof this.props.hitSlop === 'number'\n        ? {\n            top: this.props.hitSlop,\n            left: this.props.hitSlop,\n            bottom: this.props.hitSlop,\n            right: this.props.hitSlop,\n          }\n        : this.props.hitSlop) ?? undefined;\n\n    const coreProps = {\n      accessible: this.props.accessible !== false,\n      accessibilityLabel: this.props.accessibilityLabel,\n      accessibilityHint: this.props.accessibilityHint,\n      accessibilityRole: this.props.accessibilityRole,\n      // TODO: check if changed to no 's' correctly, also removed 2 props that are no longer available: `accessibilityComponentType` and `accessibilityTraits`,\n      // would be good to check if it is ok for sure, see: https://github.com/facebook/react-native/issues/24016\n      accessibilityState: this.props.accessibilityState,\n      accessibilityActions: this.props.accessibilityActions,\n      onAccessibilityAction: this.props.onAccessibilityAction,\n      nativeID: this.props.nativeID,\n      onLayout: this.props.onLayout,\n    };\n\n    return (\n      <BaseButton\n        style={this.props.containerStyle}\n        onHandlerStateChange={\n          // TODO: not sure if it can be undefined instead of null\n          this.props.disabled ? undefined : this.onHandlerStateChange\n        }\n        onGestureEvent={this.onGestureEvent}\n        hitSlop={hitSlop}\n        shouldActivateOnStart={this.props.shouldActivateOnStart}\n        disallowInterruption={this.props.disallowInterruption}\n        testID={this.props.testID}\n        touchSoundDisabled={this.props.touchSoundDisabled ?? false}\n        enabled={!this.props.disabled}\n        {...this.props.extraButtonProps}>\n        <Animated.View {...coreProps} style={this.props.style}>\n          {this.props.children}\n        </Animated.View>\n      </BaseButton>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]}