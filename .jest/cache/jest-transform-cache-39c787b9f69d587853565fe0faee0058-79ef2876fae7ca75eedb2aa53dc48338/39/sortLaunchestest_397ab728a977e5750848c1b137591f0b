c8f363d4ffdbe10e330cf0a4cd7a84fd
var _sortLaunches = require("../src//utils/sortLaunches");
describe('sortLaunches', function () {
  it('should sort launches in ascending order by default', function () {
    var launches = [{
      date_utc: '2023-01-01T00:00:00Z'
    }, {
      date_utc: '2022-01-01T00:00:00Z'
    }, {
      date_utc: '2024-01-01T00:00:00Z'
    }];
    var sortedLaunches = (0, _sortLaunches.sortLaunches)({
      launches: launches
    });
    expect(sortedLaunches).toEqual([{
      date_utc: '2022-01-01T00:00:00Z'
    }, {
      date_utc: '2023-01-01T00:00:00Z'
    }, {
      date_utc: '2024-01-01T00:00:00Z'
    }]);
  });
  it('should sort launches in descending order when reverse is true', function () {
    var launches = [{
      date_utc: '2023-01-01T00:00:00Z'
    }, {
      date_utc: '2022-01-01T00:00:00Z'
    }, {
      date_utc: '2024-01-01T00:00:00Z'
    }];
    var sortedLaunches = (0, _sortLaunches.sortLaunches)({
      launches: launches,
      reverse: true
    });
    expect(sortedLaunches).toEqual([{
      date_utc: '2024-01-01T00:00:00Z'
    }, {
      date_utc: '2023-01-01T00:00:00Z'
    }, {
      date_utc: '2022-01-01T00:00:00Z'
    }]);
  });
  it('should return an empty array if launches is empty', function () {
    var launches = [];
    var sortedLaunches = (0, _sortLaunches.sortLaunches)({
      launches: launches
    });
    expect(sortedLaunches).toEqual([]);
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfc29ydExhdW5jaGVzIiwicmVxdWlyZSIsImRlc2NyaWJlIiwiaXQiLCJsYXVuY2hlcyIsImRhdGVfdXRjIiwic29ydGVkTGF1bmNoZXMiLCJzb3J0TGF1bmNoZXMiLCJleHBlY3QiLCJ0b0VxdWFsIiwicmV2ZXJzZSJdLCJzb3VyY2VzIjpbInNvcnRMYXVuY2hlcy50ZXN0LnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHNvcnRMYXVuY2hlcyB9IGZyb20gJy4uL3NyYy8vdXRpbHMvc29ydExhdW5jaGVzJztcbmltcG9ydCB7IExhdW5jaCB9IGZyb20gJy4uL3NyYy9zZXJ2aWNlcy90eXBlcyc7XG5cbmRlc2NyaWJlKCdzb3J0TGF1bmNoZXMnLCAoKSA9PiB7XG4gICAgaXQoJ3Nob3VsZCBzb3J0IGxhdW5jaGVzIGluIGFzY2VuZGluZyBvcmRlciBieSBkZWZhdWx0JywgKCkgPT4ge1xuICAgICAgICBjb25zdCBsYXVuY2hlczogUGFydGlhbDxMYXVuY2g+W10gPSBbXG4gICAgICAgICAgICB7IGRhdGVfdXRjOiAnMjAyMy0wMS0wMVQwMDowMDowMFonIH0sXG4gICAgICAgICAgICB7IGRhdGVfdXRjOiAnMjAyMi0wMS0wMVQwMDowMDowMFonIH0sXG4gICAgICAgICAgICB7IGRhdGVfdXRjOiAnMjAyNC0wMS0wMVQwMDowMDowMFonIH0sXG4gICAgICAgIF07XG5cbiAgICAgICAgLy8gQHRzLWlnbm9yZVxuICAgICAgICBjb25zdCBzb3J0ZWRMYXVuY2hlcyA9IHNvcnRMYXVuY2hlcyh7IGxhdW5jaGVzIH0pO1xuXG4gICAgICAgIGV4cGVjdChzb3J0ZWRMYXVuY2hlcykudG9FcXVhbChbXG4gICAgICAgICAgICB7IGRhdGVfdXRjOiAnMjAyMi0wMS0wMVQwMDowMDowMFonIH0sXG4gICAgICAgICAgICB7IGRhdGVfdXRjOiAnMjAyMy0wMS0wMVQwMDowMDowMFonIH0sXG4gICAgICAgICAgICB7IGRhdGVfdXRjOiAnMjAyNC0wMS0wMVQwMDowMDowMFonIH0sXG4gICAgICAgIF0pO1xuICAgIH0pO1xuXG4gICAgaXQoJ3Nob3VsZCBzb3J0IGxhdW5jaGVzIGluIGRlc2NlbmRpbmcgb3JkZXIgd2hlbiByZXZlcnNlIGlzIHRydWUnLCAoKSA9PiB7XG4gICAgICAgIGNvbnN0IGxhdW5jaGVzOiBQYXJ0aWFsPExhdW5jaD5bXSA9IFtcbiAgICAgICAgICAgIHsgZGF0ZV91dGM6ICcyMDIzLTAxLTAxVDAwOjAwOjAwWicgfSxcbiAgICAgICAgICAgIHsgZGF0ZV91dGM6ICcyMDIyLTAxLTAxVDAwOjAwOjAwWicgfSxcbiAgICAgICAgICAgIHsgZGF0ZV91dGM6ICcyMDI0LTAxLTAxVDAwOjAwOjAwWicgfSxcbiAgICAgICAgXTtcblxuICAgICAgICAvLyBAdHMtaWdub3JlXG4gICAgICAgIGNvbnN0IHNvcnRlZExhdW5jaGVzID0gc29ydExhdW5jaGVzKHsgbGF1bmNoZXMsIHJldmVyc2U6IHRydWUgfSk7XG5cbiAgICAgICAgZXhwZWN0KHNvcnRlZExhdW5jaGVzKS50b0VxdWFsKFtcbiAgICAgICAgICAgIHsgZGF0ZV91dGM6ICcyMDI0LTAxLTAxVDAwOjAwOjAwWicgfSxcbiAgICAgICAgICAgIHsgZGF0ZV91dGM6ICcyMDIzLTAxLTAxVDAwOjAwOjAwWicgfSxcbiAgICAgICAgICAgIHsgZGF0ZV91dGM6ICcyMDIyLTAxLTAxVDAwOjAwOjAwWicgfSxcbiAgICAgICAgXSk7XG4gICAgfSk7XG5cbiAgICBpdCgnc2hvdWxkIHJldHVybiBhbiBlbXB0eSBhcnJheSBpZiBsYXVuY2hlcyBpcyBlbXB0eScsICgpID0+IHtcbiAgICAgICAgY29uc3QgbGF1bmNoZXM6IExhdW5jaFtdID0gW107XG5cbiAgICAgICAgY29uc3Qgc29ydGVkTGF1bmNoZXMgPSBzb3J0TGF1bmNoZXMoeyBsYXVuY2hlcyB9KTtcblxuICAgICAgICBleHBlY3Qoc29ydGVkTGF1bmNoZXMpLnRvRXF1YWwoW10pO1xuICAgIH0pO1xufSk7XG4iXSwibWFwcGluZ3MiOiJBQUFBLElBQUFBLGFBQUEsR0FBQUMsT0FBQTtBQUdBQyxRQUFRLENBQUMsY0FBYyxFQUFFLFlBQU07RUFDM0JDLEVBQUUsQ0FBQyxvREFBb0QsRUFBRSxZQUFNO0lBQzNELElBQU1DLFFBQTJCLEdBQUcsQ0FDaEM7TUFBRUMsUUFBUSxFQUFFO0lBQXVCLENBQUMsRUFDcEM7TUFBRUEsUUFBUSxFQUFFO0lBQXVCLENBQUMsRUFDcEM7TUFBRUEsUUFBUSxFQUFFO0lBQXVCLENBQUMsQ0FDdkM7SUFHRCxJQUFNQyxjQUFjLEdBQUcsSUFBQUMsMEJBQVksRUFBQztNQUFFSCxRQUFRLEVBQVJBO0lBQVMsQ0FBQyxDQUFDO0lBRWpESSxNQUFNLENBQUNGLGNBQWMsQ0FBQyxDQUFDRyxPQUFPLENBQUMsQ0FDM0I7TUFBRUosUUFBUSxFQUFFO0lBQXVCLENBQUMsRUFDcEM7TUFBRUEsUUFBUSxFQUFFO0lBQXVCLENBQUMsRUFDcEM7TUFBRUEsUUFBUSxFQUFFO0lBQXVCLENBQUMsQ0FDdkMsQ0FBQztFQUNOLENBQUMsQ0FBQztFQUVGRixFQUFFLENBQUMsK0RBQStELEVBQUUsWUFBTTtJQUN0RSxJQUFNQyxRQUEyQixHQUFHLENBQ2hDO01BQUVDLFFBQVEsRUFBRTtJQUF1QixDQUFDLEVBQ3BDO01BQUVBLFFBQVEsRUFBRTtJQUF1QixDQUFDLEVBQ3BDO01BQUVBLFFBQVEsRUFBRTtJQUF1QixDQUFDLENBQ3ZDO0lBR0QsSUFBTUMsY0FBYyxHQUFHLElBQUFDLDBCQUFZLEVBQUM7TUFBRUgsUUFBUSxFQUFSQSxRQUFRO01BQUVNLE9BQU8sRUFBRTtJQUFLLENBQUMsQ0FBQztJQUVoRUYsTUFBTSxDQUFDRixjQUFjLENBQUMsQ0FBQ0csT0FBTyxDQUFDLENBQzNCO01BQUVKLFFBQVEsRUFBRTtJQUF1QixDQUFDLEVBQ3BDO01BQUVBLFFBQVEsRUFBRTtJQUF1QixDQUFDLEVBQ3BDO01BQUVBLFFBQVEsRUFBRTtJQUF1QixDQUFDLENBQ3ZDLENBQUM7RUFDTixDQUFDLENBQUM7RUFFRkYsRUFBRSxDQUFDLG1EQUFtRCxFQUFFLFlBQU07SUFDMUQsSUFBTUMsUUFBa0IsR0FBRyxFQUFFO0lBRTdCLElBQU1FLGNBQWMsR0FBRyxJQUFBQywwQkFBWSxFQUFDO01BQUVILFFBQVEsRUFBUkE7SUFBUyxDQUFDLENBQUM7SUFFakRJLE1BQU0sQ0FBQ0YsY0FBYyxDQUFDLENBQUNHLE9BQU8sQ0FBQyxFQUFFLENBQUM7RUFDdEMsQ0FBQyxDQUFDO0FBQ04sQ0FBQyxDQUFDIiwiaWdub3JlTGlzdCI6W119