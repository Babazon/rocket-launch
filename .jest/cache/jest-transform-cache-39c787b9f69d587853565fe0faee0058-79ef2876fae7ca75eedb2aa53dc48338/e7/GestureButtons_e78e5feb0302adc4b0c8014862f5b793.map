{"version":3,"names":["React","_interopRequireWildcard","require","_reactNative","_createNativeWrapper","_interopRequireDefault","_GestureHandlerButton","_State","RawButton","default","shouldCancelWhenOutside","shouldActivateOnStart","BaseButton","_React$Component","props","_this","_classCallCheck2","_callSuper","_defineProperty","_ref","nativeEvent","state","oldState","pointerInside","active","State","ACTIVE","lastActive","onActiveStateChange","longPressDetected","CANCELLED","onPress","Platform","OS","BEGAN","onLongPress","longPressTimeout","setTimeout","delayLongPress","undefined","clearTimeout","END","FAILED","_this$props$onLongPre","_this$props","call","e","_this$props$onHandler","_this$props2","onHandlerStateChange","handleEvent","_this$props$onGesture","_this$props3","onGestureEvent","_inherits2","_createClass2","key","value","render","_this$props6","rippleColor","rest","_objectWithoutProperties2","_excluded","createElement","_extends","processColor","Component","AnimatedBaseButton","Animated","createAnimatedComponent","btnStyles","StyleSheet","create","underlay","position","left","right","bottom","top","RectButton","_React$Component2","_this2","_this$props$onActiveS","_this$props4","opacity","setValue","activeOpacity","Value","_this$props7","children","style","_excluded2","resolvedStyle","flatten","View","backgroundColor","underlayColor","borderRadius","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","BorderlessButton","_React$Component3","_this3","_this$props$onActiveS2","_this$props5","_this$props8","_excluded3","borderless"],"sources":["GestureButtons.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  Platform,\n  processColor,\n  StyleSheet,\n  StyleProp,\n  ViewStyle,\n} from 'react-native';\n\nimport createNativeWrapper from '../handlers/createNativeWrapper';\nimport GestureHandlerButton from './GestureHandlerButton';\nimport { State } from '../State';\n\nimport {\n  GestureEvent,\n  HandlerStateChangeEvent,\n} from '../handlers/gestureHandlerCommon';\nimport {\n  NativeViewGestureHandlerPayload,\n  NativeViewGestureHandlerProps,\n} from '../handlers/NativeViewGestureHandler';\n\nexport interface RawButtonProps extends NativeViewGestureHandlerProps {\n  /**\n   * Defines if more than one button could be pressed simultaneously. By default\n   * set true.\n   */\n  exclusive?: boolean;\n  // TODO: we should transform props in `createNativeWrapper`\n\n  /**\n   * Android only.\n   *\n   * Defines color of native ripple animation used since API level 21.\n   */\n  rippleColor?: any; // it was present in BaseButtonProps before but is used here in code\n\n  /**\n   * Android only.\n   *\n   * Defines radius of native ripple animation used since API level 21.\n   */\n  rippleRadius?: number | null;\n\n  /**\n   * Android only.\n   *\n   * Set this to true if you want the ripple animation to render outside the view bounds.\n   */\n  borderless?: boolean;\n\n  /**\n   * Android only.\n   *\n   * Defines whether the ripple animation should be drawn on the foreground of the view.\n   */\n  foreground?: boolean;\n\n  /**\n   * Android only.\n   *\n   * Set this to true if you don't want the system to play sound when the button is pressed.\n   */\n  touchSoundDisabled?: boolean;\n}\n\nexport interface BaseButtonProps extends RawButtonProps {\n  /**\n   * Called when the button gets pressed (analogous to `onPress` in\n   * `TouchableHighlight` from RN core).\n   */\n  onPress?: (pointerInside: boolean) => void;\n\n  /**\n   * Called when the button gets pressed and is held for `delayLongPress`\n   * milliseconds.\n   */\n  onLongPress?: () => void;\n\n  /**\n   * Called when button changes from inactive to active and vice versa. It\n   * passes active state as a boolean variable as a first parameter for that\n   * method.\n   */\n  onActiveStateChange?: (active: boolean) => void;\n  style?: StyleProp<ViewStyle>;\n  testID?: string;\n\n  /**\n   * Delay, in milliseconds, after which the `onLongPress` callback gets called.\n   * Defaults to 600.\n   */\n  delayLongPress?: number;\n}\n\nexport interface RectButtonProps extends BaseButtonProps {\n  /**\n   * Background color that will be dimmed when button is in active state.\n   */\n  underlayColor?: string;\n\n  /**\n   * iOS only.\n   *\n   * Opacity applied to the underlay when button is in active state.\n   */\n  activeOpacity?: number;\n}\n\nexport interface BorderlessButtonProps extends BaseButtonProps {\n  /**\n   * iOS only.\n   *\n   * Opacity applied to the button when it is in an active state.\n   */\n  activeOpacity?: number;\n}\n\nexport const RawButton = createNativeWrapper(GestureHandlerButton, {\n  shouldCancelWhenOutside: false,\n  shouldActivateOnStart: false,\n});\n\nexport class BaseButton extends React.Component<BaseButtonProps> {\n  static defaultProps = {\n    delayLongPress: 600,\n  };\n\n  private lastActive: boolean;\n  private longPressTimeout: ReturnType<typeof setTimeout> | undefined;\n  private longPressDetected: boolean;\n\n  constructor(props: BaseButtonProps) {\n    super(props);\n    this.lastActive = false;\n    this.longPressDetected = false;\n  }\n\n  private handleEvent = ({\n    nativeEvent,\n  }: HandlerStateChangeEvent<NativeViewGestureHandlerPayload>) => {\n    const { state, oldState, pointerInside } = nativeEvent;\n    const active = pointerInside && state === State.ACTIVE;\n\n    if (active !== this.lastActive && this.props.onActiveStateChange) {\n      this.props.onActiveStateChange(active);\n    }\n\n    if (\n      !this.longPressDetected &&\n      oldState === State.ACTIVE &&\n      state !== State.CANCELLED &&\n      this.lastActive &&\n      this.props.onPress\n    ) {\n      this.props.onPress(active);\n    }\n\n    if (\n      !this.lastActive &&\n      // NativeViewGestureHandler sends different events based on platform\n      state === (Platform.OS !== 'android' ? State.ACTIVE : State.BEGAN) &&\n      pointerInside\n    ) {\n      this.longPressDetected = false;\n      if (this.props.onLongPress) {\n        this.longPressTimeout = setTimeout(\n          this.onLongPress,\n          this.props.delayLongPress\n        );\n      }\n    } else if (\n      // cancel longpress timeout if it's set and the finger moved out of the view\n      state === State.ACTIVE &&\n      !pointerInside &&\n      this.longPressTimeout !== undefined\n    ) {\n      clearTimeout(this.longPressTimeout);\n      this.longPressTimeout = undefined;\n    } else if (\n      // cancel longpress timeout if it's set and the gesture has finished\n      this.longPressTimeout !== undefined &&\n      (state === State.END ||\n        state === State.CANCELLED ||\n        state === State.FAILED)\n    ) {\n      clearTimeout(this.longPressTimeout);\n      this.longPressTimeout = undefined;\n    }\n\n    this.lastActive = active;\n  };\n\n  private onLongPress = () => {\n    this.longPressDetected = true;\n    this.props.onLongPress?.();\n  };\n\n  // Normally, the parent would execute it's handler first, then forward the\n  // event to listeners. However, here our handler is virtually only forwarding\n  // events to listeners, so we reverse the order to keep the proper order of\n  // the callbacks (from \"raw\" ones to \"processed\").\n  private onHandlerStateChange = (\n    e: HandlerStateChangeEvent<NativeViewGestureHandlerPayload>\n  ) => {\n    this.props.onHandlerStateChange?.(e);\n    this.handleEvent(e);\n  };\n\n  private onGestureEvent = (\n    e: GestureEvent<NativeViewGestureHandlerPayload>\n  ) => {\n    this.props.onGestureEvent?.(e);\n    this.handleEvent(\n      e as HandlerStateChangeEvent<NativeViewGestureHandlerPayload>\n    ); // TODO: maybe it is not correct\n  };\n\n  render() {\n    const { rippleColor, ...rest } = this.props;\n\n    return (\n      <RawButton\n        rippleColor={processColor(rippleColor)}\n        {...rest}\n        onGestureEvent={this.onGestureEvent}\n        onHandlerStateChange={this.onHandlerStateChange}\n      />\n    );\n  }\n}\n\nconst AnimatedBaseButton = Animated.createAnimatedComponent(BaseButton);\n\nconst btnStyles = StyleSheet.create({\n  underlay: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    bottom: 0,\n    top: 0,\n  },\n});\n\nexport class RectButton extends React.Component<RectButtonProps> {\n  static defaultProps = {\n    activeOpacity: 0.105,\n    underlayColor: 'black',\n  };\n\n  private opacity: Animated.Value;\n\n  constructor(props: RectButtonProps) {\n    super(props);\n    this.opacity = new Animated.Value(0);\n  }\n\n  private onActiveStateChange = (active: boolean) => {\n    if (Platform.OS !== 'android') {\n      this.opacity.setValue(active ? this.props.activeOpacity! : 0);\n    }\n\n    this.props.onActiveStateChange?.(active);\n  };\n\n  render() {\n    const { children, style, ...rest } = this.props;\n\n    const resolvedStyle = StyleSheet.flatten(style ?? {});\n\n    return (\n      <BaseButton\n        {...rest}\n        style={resolvedStyle}\n        onActiveStateChange={this.onActiveStateChange}>\n        <Animated.View\n          style={[\n            btnStyles.underlay,\n            {\n              opacity: this.opacity,\n              backgroundColor: this.props.underlayColor,\n              borderRadius: resolvedStyle.borderRadius,\n              borderTopLeftRadius: resolvedStyle.borderTopLeftRadius,\n              borderTopRightRadius: resolvedStyle.borderTopRightRadius,\n              borderBottomLeftRadius: resolvedStyle.borderBottomLeftRadius,\n              borderBottomRightRadius: resolvedStyle.borderBottomRightRadius,\n            },\n          ]}\n        />\n        {children}\n      </BaseButton>\n    );\n  }\n}\n\nexport class BorderlessButton extends React.Component<BorderlessButtonProps> {\n  static defaultProps = {\n    activeOpacity: 0.3,\n    borderless: true,\n  };\n\n  private opacity: Animated.Value;\n\n  constructor(props: BorderlessButtonProps) {\n    super(props);\n    this.opacity = new Animated.Value(1);\n  }\n\n  private onActiveStateChange = (active: boolean) => {\n    if (Platform.OS !== 'android') {\n      this.opacity.setValue(active ? this.props.activeOpacity! : 1);\n    }\n\n    this.props.onActiveStateChange?.(active);\n  };\n\n  render() {\n    const { children, style, ...rest } = this.props;\n\n    return (\n      <AnimatedBaseButton\n        {...rest}\n        onActiveStateChange={this.onActiveStateChange}\n        style={[style, Platform.OS === 'ios' && { opacity: this.opacity }]}>\n        {children}\n      </AnimatedBaseButton>\n    );\n  }\n}\n\nexport { default as PureNativeButton } from './GestureHandlerButton';\n"],"mappings":"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","ignoreList":[]}