2da0c1d68b442203f923ecaf984987c3
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _get2 = _interopRequireDefault(require("@babel/runtime/helpers/get"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ManualGesture = void 0;
var _gesture = require("./gesture");
function changeEventCalculator(current, _previous) {
  'worklet';

  return current;
}
var ManualGesture = function (_gesture$ContinousBas) {
  function ManualGesture() {
    var _this;
    (0, _classCallCheck2.default)(this, ManualGesture);
    _this = _callSuper(this, ManualGesture);
    _this.handlerName = 'ManualGestureHandler';
    return _this;
  }
  (0, _inherits2.default)(ManualGesture, _gesture$ContinousBas);
  return (0, _createClass2.default)(ManualGesture, [{
    key: "onChange",
    value: function onChange(callback) {
      this.handlers.changeEventCalculator = changeEventCalculator;
      return (0, _get2.default)((0, _getPrototypeOf2.default)(ManualGesture.prototype), "onChange", this).call(this, callback);
    }
  }]);
}(_gesture.ContinousBaseGesture);
exports.ManualGesture = ManualGesture;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZ2VzdHVyZSIsInJlcXVpcmUiLCJjaGFuZ2VFdmVudENhbGN1bGF0b3IiLCJjdXJyZW50IiwiX3ByZXZpb3VzIiwiTWFudWFsR2VzdHVyZSIsIl9nZXN0dXJlJENvbnRpbm91c0JhcyIsIl90aGlzIiwiX2NsYXNzQ2FsbENoZWNrMiIsImRlZmF1bHQiLCJfY2FsbFN1cGVyIiwiaGFuZGxlck5hbWUiLCJfaW5oZXJpdHMyIiwiX2NyZWF0ZUNsYXNzMiIsImtleSIsInZhbHVlIiwib25DaGFuZ2UiLCJjYWxsYmFjayIsImhhbmRsZXJzIiwiX2dldDIiLCJfZ2V0UHJvdG90eXBlT2YyIiwicHJvdG90eXBlIiwiY2FsbCIsIkNvbnRpbm91c0Jhc2VHZXN0dXJlIl0sInNvdXJjZXMiOlsibWFudWFsR2VzdHVyZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBHZXN0dXJlVXBkYXRlRXZlbnQgfSBmcm9tICcuLi9nZXN0dXJlSGFuZGxlckNvbW1vbic7XG5pbXBvcnQgeyBDb250aW5vdXNCYXNlR2VzdHVyZSB9IGZyb20gJy4vZ2VzdHVyZSc7XG5cbmZ1bmN0aW9uIGNoYW5nZUV2ZW50Q2FsY3VsYXRvcihcbiAgY3VycmVudDogR2VzdHVyZVVwZGF0ZUV2ZW50PFJlY29yZDxzdHJpbmcsIG5ldmVyPj4sXG4gIF9wcmV2aW91cz86IEdlc3R1cmVVcGRhdGVFdmVudDxSZWNvcmQ8c3RyaW5nLCBuZXZlcj4+XG4pIHtcbiAgJ3dvcmtsZXQnO1xuICByZXR1cm4gY3VycmVudDtcbn1cblxuZXhwb3J0IGNsYXNzIE1hbnVhbEdlc3R1cmUgZXh0ZW5kcyBDb250aW5vdXNCYXNlR2VzdHVyZTxcbiAgUmVjb3JkPHN0cmluZywgbmV2ZXI+LFxuICBSZWNvcmQ8c3RyaW5nLCBuZXZlcj5cbj4ge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcigpO1xuXG4gICAgdGhpcy5oYW5kbGVyTmFtZSA9ICdNYW51YWxHZXN0dXJlSGFuZGxlcic7XG4gIH1cblxuICBvbkNoYW5nZShcbiAgICBjYWxsYmFjazogKGV2ZW50OiBHZXN0dXJlVXBkYXRlRXZlbnQ8UmVjb3JkPHN0cmluZywgbmV2ZXI+PikgPT4gdm9pZFxuICApIHtcbiAgICAvLyBAdHMtaWdub3JlIFRTIGJlaW5nIG92ZXJwcm90ZWN0aXZlLCBSZWNvcmQ8c3RyaW5nLCBuZXZlcj4gaXMgUmVjb3JkXG4gICAgdGhpcy5oYW5kbGVycy5jaGFuZ2VFdmVudENhbGN1bGF0b3IgPSBjaGFuZ2VFdmVudENhbGN1bGF0b3I7XG4gICAgcmV0dXJuIHN1cGVyLm9uQ2hhbmdlKGNhbGxiYWNrKTtcbiAgfVxufVxuXG5leHBvcnQgdHlwZSBNYW51YWxHZXN0dXJlVHlwZSA9IEluc3RhbmNlVHlwZTx0eXBlb2YgTWFudWFsR2VzdHVyZT47XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUNBLElBQUFBLFFBQUEsR0FBQUMsT0FBQTtBQUVBLFNBQVNDLHFCQUFUQSxDQUNFQyxPQURGLEVBRUVDLFNBRkYsRUFHRTtFQUNBOztFQUNBLE9BQU9ELE9BQVA7QUFDRDtBQUFBLElBRVlFLGFBQU4sYUFBQUMscUJBQUE7RUFJTCxTQUFBRCxjQUFBLEVBQWM7SUFBQSxJQUFBRSxLQUFBO0lBQUEsSUFBQUMsZ0JBQUEsQ0FBQUMsT0FBQSxRQUFBSixhQUFBO0lBQ1pFLEtBQUEsR0FBQUcsVUFBQSxPQUFBTCxhQUFBO0lBRUFFLEtBQUEsQ0FBS0ksV0FBTCxHQUFtQixzQkFBbkI7SUFBQSxPQUFBSixLQUFBO0VBQ0Q7RUFBQSxJQUFBSyxVQUFBLENBQUFILE9BQUEsRUFBQUosYUFBQSxFQUFBQyxxQkFBQTtFQUFBLFdBQUFPLGFBQUEsQ0FBQUosT0FBQSxFQUFBSixhQUFBO0lBQUFTLEdBQUE7SUFBQUMsS0FBQSxFQUVELFNBQUFDLFNBQ0VDLFFBRE0sRUFFTjtNQUVBLEtBQUtDLFFBQUwsQ0FBY2hCLHFCQUFkLEdBQXNDQSxxQkFBdEM7TUFDQSxXQUFBaUIsS0FBQSxDQUFBVixPQUFBLE1BQUFXLGdCQUFBLENBQUFYLE9BQUEsRUFBQUosYUFBQSxDQUFBZ0IsU0FBQSxxQkFBQUMsSUFBQSxPQUFzQkwsUUFBZjtJQUNSO0VBQUE7QUFBQSxFQWhCZ0NqQixRQUFBLENBQUF1QixvQkFBNUIiLCJpZ25vcmVMaXN0IjpbXX0=