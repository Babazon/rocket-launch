e25d3d0fabe77676f1e9c191661aa2f8
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _excluded = ["style"];
function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _reactNative = require("react-native");
var _GenericTouchable = _interopRequireWildcard(require("./GenericTouchable"));
var React = _interopRequireWildcard(require("react"));
function _getRequireWildcardCache() {
  if (typeof WeakMap !== "function") return null;
  var cache = new WeakMap();
  _getRequireWildcardCache = function _getRequireWildcardCache() {
    return cache;
  };
  return cache;
}
function _interopRequireWildcard(obj) {
  if (obj && obj.__esModule) {
    return obj;
  }
  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      default: obj
    };
  }
  var cache = _getRequireWildcardCache();
  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }
  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }
  newObj.default = obj;
  if (cache) {
    cache.set(obj, newObj);
  }
  return newObj;
}
function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}
var TouchableOpacity = function (_React$Component) {
  function TouchableOpacity() {
    var _this;
    (0, _classCallCheck2.default)(this, TouchableOpacity);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _callSuper(this, TouchableOpacity, [].concat(args));
    _defineProperty(_this, "getChildStyleOpacityWithDefault", function () {
      var childStyle = _reactNative.StyleSheet.flatten(_this.props.style) || {};
      return childStyle.opacity == null ? 1 : childStyle.opacity.valueOf();
    });
    _defineProperty(_this, "opacity", new _reactNative.Animated.Value(_this.getChildStyleOpacityWithDefault()));
    _defineProperty(_this, "setOpacityTo", function (value, duration) {
      var _this$props$useNative;
      _reactNative.Animated.timing(_this.opacity, {
        toValue: value,
        duration: duration,
        easing: _reactNative.Easing.inOut(_reactNative.Easing.quad),
        useNativeDriver: (_this$props$useNative = _this.props.useNativeAnimations) !== null && _this$props$useNative !== void 0 ? _this$props$useNative : true
      }).start();
    });
    _defineProperty(_this, "onStateChange", function (_from, to) {
      if (to === _GenericTouchable.TOUCHABLE_STATE.BEGAN) {
        _this.setOpacityTo(_this.props.activeOpacity, 0);
      } else if (to === _GenericTouchable.TOUCHABLE_STATE.UNDETERMINED || to === _GenericTouchable.TOUCHABLE_STATE.MOVED_OUTSIDE) {
        _this.setOpacityTo(_this.getChildStyleOpacityWithDefault(), 150);
      }
    });
    return _this;
  }
  (0, _inherits2.default)(TouchableOpacity, _React$Component);
  return (0, _createClass2.default)(TouchableOpacity, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
        _this$props$style = _this$props.style,
        style = _this$props$style === void 0 ? {} : _this$props$style,
        rest = (0, _objectWithoutProperties2.default)(_this$props, _excluded);
      return React.createElement(_GenericTouchable.default, _extends({}, rest, {
        style: [style, {
          opacity: this.opacity
        }],
        onStateChange: this.onStateChange
      }), this.props.children ? this.props.children : React.createElement(_reactNative.View, null));
    }
  }]);
}(React.Component);
exports.default = TouchableOpacity;
_defineProperty(TouchableOpacity, "defaultProps", Object.assign({}, _GenericTouchable.default.defaultProps, {
  activeOpacity: 0.2
}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3ROYXRpdmUiLCJyZXF1aXJlIiwiX0dlbmVyaWNUb3VjaGFibGUiLCJfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZCIsIlJlYWN0IiwiVG91Y2hhYmxlT3BhY2l0eSIsIl9SZWFjdCRDb21wb25lbnQiLCJfdGhpcyIsIl9jbGFzc0NhbGxDaGVjazIiLCJkZWZhdWx0IiwiX2xlbiIsImFyZ3VtZW50cyIsImxlbmd0aCIsImFyZ3MiLCJBcnJheSIsIl9rZXkiLCJfY2FsbFN1cGVyIiwiY29uY2F0IiwiX2RlZmluZVByb3BlcnR5IiwiY2hpbGRTdHlsZSIsIlN0eWxlU2hlZXQiLCJmbGF0dGVuIiwicHJvcHMiLCJzdHlsZSIsIm9wYWNpdHkiLCJ2YWx1ZU9mIiwiQW5pbWF0ZWQiLCJWYWx1ZSIsImdldENoaWxkU3R5bGVPcGFjaXR5V2l0aERlZmF1bHQiLCJ2YWx1ZSIsImR1cmF0aW9uIiwiX3RoaXMkcHJvcHMkdXNlTmF0aXZlIiwidGltaW5nIiwidG9WYWx1ZSIsImVhc2luZyIsIkVhc2luZyIsImluT3V0IiwicXVhZCIsInVzZU5hdGl2ZURyaXZlciIsInVzZU5hdGl2ZUFuaW1hdGlvbnMiLCJzdGFydCIsIl9mcm9tIiwidG8iLCJUT1VDSEFCTEVfU1RBVEUiLCJCRUdBTiIsInNldE9wYWNpdHlUbyIsImFjdGl2ZU9wYWNpdHkiLCJVTkRFVEVSTUlORUQiLCJNT1ZFRF9PVVRTSURFIiwiX2luaGVyaXRzMiIsIl9jcmVhdGVDbGFzczIiLCJrZXkiLCJyZW5kZXIiLCJfdGhpcyRwcm9wcyIsIl90aGlzJHByb3BzJHN0eWxlIiwicmVzdCIsIl9vYmplY3RXaXRob3V0UHJvcGVydGllczIiLCJfZXhjbHVkZWQiLCJjcmVhdGVFbGVtZW50IiwiX2V4dGVuZHMiLCJvblN0YXRlQ2hhbmdlIiwiY2hpbGRyZW4iLCJWaWV3IiwiQ29tcG9uZW50IiwiZGVmYXVsdFByb3BzIl0sInNvdXJjZXMiOlsiVG91Y2hhYmxlT3BhY2l0eS50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgQW5pbWF0ZWQsXG4gIEVhc2luZyxcbiAgU3R5bGVTaGVldCxcbiAgVmlldyxcbiAgVG91Y2hhYmxlT3BhY2l0eVByb3BzIGFzIFJOVG91Y2hhYmxlT3BhY2l0eVByb3BzLFxufSBmcm9tICdyZWFjdC1uYXRpdmUnO1xuaW1wb3J0IEdlbmVyaWNUb3VjaGFibGUsIHtcbiAgVE9VQ0hBQkxFX1NUQVRFLFxuICBHZW5lcmljVG91Y2hhYmxlUHJvcHMsXG59IGZyb20gJy4vR2VuZXJpY1RvdWNoYWJsZSc7XG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5cbmV4cG9ydCB0eXBlIFRvdWNoYWJsZU9wYWNpdHlQcm9wcyA9IFJOVG91Y2hhYmxlT3BhY2l0eVByb3BzICZcbiAgR2VuZXJpY1RvdWNoYWJsZVByb3BzICYge1xuICAgIHVzZU5hdGl2ZUFuaW1hdGlvbnM/OiBib29sZWFuO1xuICB9O1xuXG4vKipcbiAqIFRvdWNoYWJsZU9wYWNpdHkgYmFzZXMgb24gdGltaW5nIGFuaW1hdGlvbiB3aGljaCBoYXMgYmVlbiB1c2VkIGluIFJOJ3MgY29yZVxuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBUb3VjaGFibGVPcGFjaXR5IGV4dGVuZHMgQ29tcG9uZW50PFRvdWNoYWJsZU9wYWNpdHlQcm9wcz4ge1xuICBzdGF0aWMgZGVmYXVsdFByb3BzID0ge1xuICAgIC4uLkdlbmVyaWNUb3VjaGFibGUuZGVmYXVsdFByb3BzLFxuICAgIGFjdGl2ZU9wYWNpdHk6IDAuMixcbiAgfTtcblxuICAvLyBvcGFjaXR5IGlzIDEgb25lIGJ5IGRlZmF1bHQgYnV0IGNvdWxkIGJlIG92ZXJ3cml0dGVuXG4gIGdldENoaWxkU3R5bGVPcGFjaXR5V2l0aERlZmF1bHQgPSAoKSA9PiB7XG4gICAgY29uc3QgY2hpbGRTdHlsZSA9IFN0eWxlU2hlZXQuZmxhdHRlbih0aGlzLnByb3BzLnN0eWxlKSB8fCB7fTtcbiAgICByZXR1cm4gY2hpbGRTdHlsZS5vcGFjaXR5ID09IG51bGxcbiAgICAgID8gMVxuICAgICAgOiAoY2hpbGRTdHlsZS5vcGFjaXR5LnZhbHVlT2YoKSBhcyBudW1iZXIpO1xuICB9O1xuXG4gIG9wYWNpdHkgPSBuZXcgQW5pbWF0ZWQuVmFsdWUodGhpcy5nZXRDaGlsZFN0eWxlT3BhY2l0eVdpdGhEZWZhdWx0KCkpO1xuXG4gIHNldE9wYWNpdHlUbyA9ICh2YWx1ZTogbnVtYmVyLCBkdXJhdGlvbjogbnVtYmVyKSA9PiB7XG4gICAgQW5pbWF0ZWQudGltaW5nKHRoaXMub3BhY2l0eSwge1xuICAgICAgdG9WYWx1ZTogdmFsdWUsXG4gICAgICBkdXJhdGlvbjogZHVyYXRpb24sXG4gICAgICBlYXNpbmc6IEVhc2luZy5pbk91dChFYXNpbmcucXVhZCksXG4gICAgICB1c2VOYXRpdmVEcml2ZXI6IHRoaXMucHJvcHMudXNlTmF0aXZlQW5pbWF0aW9ucyA/PyB0cnVlLFxuICAgIH0pLnN0YXJ0KCk7XG4gIH07XG5cbiAgb25TdGF0ZUNoYW5nZSA9IChfZnJvbTogbnVtYmVyLCB0bzogbnVtYmVyKSA9PiB7XG4gICAgaWYgKHRvID09PSBUT1VDSEFCTEVfU1RBVEUuQkVHQU4pIHtcbiAgICAgIHRoaXMuc2V0T3BhY2l0eVRvKHRoaXMucHJvcHMuYWN0aXZlT3BhY2l0eSEsIDApO1xuICAgIH0gZWxzZSBpZiAoXG4gICAgICB0byA9PT0gVE9VQ0hBQkxFX1NUQVRFLlVOREVURVJNSU5FRCB8fFxuICAgICAgdG8gPT09IFRPVUNIQUJMRV9TVEFURS5NT1ZFRF9PVVRTSURFXG4gICAgKSB7XG4gICAgICB0aGlzLnNldE9wYWNpdHlUbyh0aGlzLmdldENoaWxkU3R5bGVPcGFjaXR5V2l0aERlZmF1bHQoKSwgMTUwKTtcbiAgICB9XG4gIH07XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHsgc3R5bGUgPSB7fSwgLi4ucmVzdCB9ID0gdGhpcy5wcm9wcztcbiAgICByZXR1cm4gKFxuICAgICAgPEdlbmVyaWNUb3VjaGFibGVcbiAgICAgICAgey4uLnJlc3R9XG4gICAgICAgIHN0eWxlPXtbXG4gICAgICAgICAgc3R5bGUsXG4gICAgICAgICAge1xuICAgICAgICAgICAgb3BhY2l0eTogdGhpcy5vcGFjaXR5IGFzIHVua25vd24gYXMgbnVtYmVyLCAvLyBUT0RPOiBmaXggdGhpc1xuICAgICAgICAgIH0sXG4gICAgICAgIF19XG4gICAgICAgIG9uU3RhdGVDaGFuZ2U9e3RoaXMub25TdGF0ZUNoYW5nZX0+XG4gICAgICAgIHt0aGlzLnByb3BzLmNoaWxkcmVuID8gdGhpcy5wcm9wcy5jaGlsZHJlbiA6IDxWaWV3IC8+fVxuICAgICAgPC9HZW5lcmljVG91Y2hhYmxlPlxuICAgICk7XG4gIH1cbn1cbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLElBQUFBLFlBQUEsR0FBQUMsT0FBQTtBQU9BLElBQUFDLGlCQUFBLEdBQUFDLHVCQUFBLENBQUFGLE9BQUE7QUFJQSxJQUFBRyxLQUFBLEdBQUFELHVCQUFBLENBQUFGLE9BQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFXcUJJLGdCQUFOLGFBQUFDLGdCQUFBO0VBQWdFLFNBQUFELGlCQUFBO0lBQUEsSUFBQUUsS0FBQTtJQUFBLElBQUFDLGdCQUFBLENBQUFDLE9BQUEsUUFBQUosZ0JBQUE7SUFBQSxTQUFBSyxJQUFBLEdBQUFDLFNBQUEsQ0FBQUMsTUFBQSxFQUFBQyxJQUFBLE9BQUFDLEtBQUEsQ0FBQUosSUFBQSxHQUFBSyxJQUFBLE1BQUFBLElBQUEsR0FBQUwsSUFBQSxFQUFBSyxJQUFBO01BQUFGLElBQUEsQ0FBQUUsSUFBQSxJQUFBSixTQUFBLENBQUFJLElBQUE7SUFBQTtJQUFBUixLQUFBLEdBQUFTLFVBQUEsT0FBQVgsZ0JBQUEsS0FBQVksTUFBQSxDQUFBSixJQUFBO0lBQUFLLGVBQUEsQ0FBQVgsS0FBQSxxQ0FPM0MsWUFBTTtNQUN0QyxJQUFNWSxVQUFVLEdB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